{
    "instance_id": "django__django-14730",
    "model_name_or_path": "codebuff",
    "model_patch": "diff --git a/django/db/models/fields/related.py b/django/db/models/fields/related.py\nindex febaadbb5b..10f711fa94 100644\n--- a/django/db/models/fields/related.py\n+++ b/django/db/models/fields/related.py\n@@ -1214,8 +1214,21 @@ class ManyToManyField(RelatedField):\n             *self._check_relationship_model(**kwargs),\n             *self._check_ignored_options(**kwargs),\n             *self._check_table_uniqueness(**kwargs),\n+            *self._check_symmetrical_related_name(**kwargs),\n         ]\n \n+    def _check_symmetrical_related_name(self, **kwargs):\n+        if self.remote_field.symmetrical and self.remote_field.related_name is not None:\n+            return [\n+                checks.Error(\n+                    'related_name cannot be set on a symmetrical ManyToManyField.',\n+                    hint='Remove the related_name argument on the field.',\n+                    obj=self,\n+                    id='fields.E341',\n+                )\n+            ]\n+        return []\n+\n     def _check_unique(self, **kwargs):\n         if self.unique:\n             return [\ndiff --git a/tests/model_fields/test_manytomanyfield.py b/tests/model_fields/test_manytomanyfield.py\nindex 0ddf57ceaf..59adfcfdc9 100644\n--- a/tests/model_fields/test_manytomanyfield.py\n+++ b/tests/model_fields/test_manytomanyfield.py\n@@ -87,6 +87,20 @@ class ManyToManyFieldTests(SimpleTestCase):\n                     db_table='custom_name',\n                 )\n \n+    def test_symmetrical_related_name_error(self):\n+        msg = 'related_name cannot be set on a symmetrical ManyToManyField.'\n+        with self.assertRaisesMessage(checks.Error, msg):\n+            class MyModel(models.Model):\n+                m2m = models.ManyToManyField(\n+                    'self',\n+                    symmetrical=True,\n+                    related_name='related_models',\n+                )\n+                class Meta:\n+                    app_label = 'model_fields'\n+\n+            MyModel.check()\n+\n \n class ManyToManyFieldDBTests(TestCase):\n \n",
    "cost": 0,
    "edit_outcome": true,
    "lint_outcome": true,
    "test_outcome": false,
    "resolved": false
}