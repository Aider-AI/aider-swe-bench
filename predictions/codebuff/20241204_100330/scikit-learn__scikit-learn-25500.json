{
    "instance_id": "scikit-learn__scikit-learn-25500",
    "model_name_or_path": "codebuff",
    "model_patch": "diff --git a/sklearn/calibration.py b/sklearn/calibration.py\nindex 2c4a33616..afbe4898e 100644\n--- a/sklearn/calibration.py\n+++ b/sklearn/calibration.py\n@@ -474,6 +474,9 @@ class CalibratedClassifierCV(ClassifierMixin, MetaEstimatorMixin, BaseEstimator)\n         mean_proba = np.zeros((_num_samples(X), len(self.classes_)))\n         for calibrated_classifier in self.calibrated_classifiers_:\n             proba = calibrated_classifier.predict_proba(X)\n+            # Convert DataFrame to numpy array if needed\n+            if hasattr(proba, \"to_numpy\"):\n+                proba = proba.to_numpy()\n             mean_proba += proba\n \n         mean_proba /= len(self.calibrated_classifiers_)\n@@ -748,6 +751,8 @@ class _CalibratedClassifier:\n         n_classes = len(self.classes)\n         pred_method, method_name = _get_prediction_method(self.estimator)\n         predictions = _compute_predictions(pred_method, method_name, X, n_classes)\n+        if hasattr(predictions, \"to_numpy\"):\n+            predictions = predictions.to_numpy()\n \n         label_encoder = LabelEncoder().fit(self.classes)\n         pos_class_indices = label_encoder.transform(self.estimator.classes_)\n@@ -760,6 +765,8 @@ class _CalibratedClassifier:\n                 # When binary, `predictions` consists only of predictions for\n                 # clf.classes_[1] but `pos_class_indices` = 0\n                 class_idx += 1\n+            if hasattr(this_pred, \"to_numpy\"):\n+                this_pred = this_pred.to_numpy()\n             proba[:, class_idx] = calibrator.predict(this_pred)\n \n         # Normalize the probabilities\n@@ -903,6 +910,8 @@ class _SigmoidCalibration(RegressorMixin, BaseEstimator):\n             The predicted data.\n         \"\"\"\n         T = column_or_1d(T)\n+        if hasattr(T, \"to_numpy\"):\n+            T = T.to_numpy()\n         return expit(-(self.a_ * T + self.b_))\n \n \n",
    "cost": 0,
    "edit_outcome": true,
    "lint_outcome": true,
    "test_outcome": true,
    "resolved": false
}