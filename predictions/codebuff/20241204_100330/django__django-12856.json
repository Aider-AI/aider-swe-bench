{
    "instance_id": "django__django-12856",
    "model_name_or_path": "codebuff",
    "model_patch": "diff --git a/django/core/checks/model_checks.py b/django/core/checks/model_checks.py\nindex 7b156fceee..923b4e9542 100644\n--- a/django/core/checks/model_checks.py\n+++ b/django/core/checks/model_checks.py\n@@ -32,6 +32,10 @@ def check_all_models(app_configs=None, **kwargs):\n             )\n         else:\n             errors.extend(model.check(**kwargs))\n+            # Check fields referenced by unique constraints exist\n+            for constraint in model._meta.constraints:\n+                if isinstance(constraint, UniqueConstraint):\n+                    errors.extend(constraint.check_fields_exist(model))\n         for model_index in model._meta.indexes:\n             indexes[model_index.name].append(model._meta.label)\n         for model_constraint in model._meta.constraints:\ndiff --git a/django/db/models/constraints.py b/django/db/models/constraints.py\nindex 64bd60484e..0be452226e 100644\n--- a/django/db/models/constraints.py\n+++ b/django/db/models/constraints.py\n@@ -95,6 +95,22 @@ class UniqueConstraint(BaseConstraint):\n         self.deferrable = deferrable\n         super().__init__(name)\n \n+    def check_fields_exist(self, model):\n+        \"\"\"Check if all fields referenced by the constraint exist on the model.\"\"\"\n+        for field_name in self.fields:\n+            try:\n+                field = model._meta.get_field(field_name)\n+            except FieldDoesNotExist:\n+                return [\n+                    Error(\n+                        \"The field '%s' referenced by unique constraint '%s' \"\n+                        \"does not exist.\" % (field_name, self.name),\n+                        obj=model,\n+                        id='models.E012',\n+                    )\n+                ]\n+        return []\n+\n     def _get_condition_sql(self, model, schema_editor):\n         if self.condition is None:\n             return None\n",
    "cost": 0,
    "edit_outcome": true,
    "lint_outcome": true,
    "test_outcome": true,
    "resolved": false
}