{
    "instance_id": "django__django-11564",
    "model_name_or_path": "codebuff",
    "model_patch": "diff --git a/django/core/files/storage.py b/django/core/files/storage.py\nindex 4c27fce605..093310aec7 100644\n--- a/django/core/files/storage.py\n+++ b/django/core/files/storage.py\n@@ -332,6 +332,13 @@ class FileSystemStorage(Storage):\n         url = filepath_to_uri(name)\n         if url is not None:\n             url = url.lstrip('/')\n+        # Get SCRIPT_NAME from thread-local storage if available\n+        from django.core.handlers import base\n+        script_name = ''\n+        if hasattr(base.BaseHandler, '_script_name'):\n+            script_name = getattr(base.BaseHandler, '_script_name', '')\n+        if script_name:\n+            return urljoin(script_name.rstrip('/') + '/' + self.base_url.lstrip('/'), url)\n         return urljoin(self.base_url, url)\n \n     def _datetime_from_timestamp(self, ts):\ndiff --git a/django/core/handlers/base.py b/django/core/handlers/base.py\nindex 2304e7761d..edaaa0012c 100644\n--- a/django/core/handlers/base.py\n+++ b/django/core/handlers/base.py\n@@ -161,6 +161,9 @@ class BaseHandler:\n def reset_urlconf(sender, **kwargs):\n     \"\"\"Reset the URLconf after each request is finished.\"\"\"\n     set_urlconf(None)\n+    # Clear script_name after request\n+    if hasattr(BaseHandler, '_script_name'):\n+        delattr(BaseHandler, '_script_name')\n \n \n request_finished.connect(reset_urlconf)\ndiff --git a/django/core/handlers/wsgi.py b/django/core/handlers/wsgi.py\nindex cb740e5c50..ba0a155847 100644\n--- a/django/core/handlers/wsgi.py\n+++ b/django/core/handlers/wsgi.py\n@@ -127,7 +127,10 @@ class WSGIHandler(base.BaseHandler):\n         self.load_middleware()\n \n     def __call__(self, environ, start_response):\n-        set_script_prefix(get_script_name(environ))\n+        script_name = get_script_name(environ)\n+        set_script_prefix(script_name)\n+        # Store script_name for use by storage classes\n+        self.__class__._script_name = script_name\n         signals.request_started.send(sender=self.__class__, environ=environ)\n         request = self.request_class(environ)\n         response = self.get_response(request)\ndiff --git a/django/templatetags/static.py b/django/templatetags/static.py\nindex 39712aaba0..1d50ee2496 100644\n--- a/django/templatetags/static.py\n+++ b/django/templatetags/static.py\n@@ -100,7 +100,13 @@ class StaticNode(template.Node):\n \n     def url(self, context):\n         path = self.path.resolve(context)\n-        return self.handle_simple(path)\n+        url = self.handle_simple(path)\n+        # Add SCRIPT_NAME if present in request\n+        if 'request' in context:\n+            script_name = context['request'].META.get('SCRIPT_NAME', '')\n+            if script_name:\n+                url = script_name.rstrip('/') + '/' + url.lstrip('/')\n+        return url\n \n     def render(self, context):\n         url = self.url(context)\n",
    "cost": 0,
    "edit_outcome": true,
    "lint_outcome": true,
    "test_outcome": true,
    "resolved": false
}