{
    "instance_id": "django__django-15695",
    "model_name_or_path": "codebuff",
    "model_patch": "diff --git a/django/db/migrations/operations/models.py b/django/db/migrations/operations/models.py\nindex d17232e4ec..36ace9d4e6 100644\n--- a/django/db/migrations/operations/models.py\n+++ b/django/db/migrations/operations/models.py\n@@ -966,23 +966,42 @@ class RenameIndex(IndexOperation):\n         schema_editor.rename_index(model, old_index, new_index)\n \n     def database_backwards(self, app_label, schema_editor, from_state, to_state):\n-        if self.old_fields:\n-            # Backward operation with unnamed index is a no-op.\n+        model = to_state.apps.get_model(app_label, self.model_name)\n+        if not self.allow_migrate_model(schema_editor.connection.alias, model):\n             return\n \n-        self.new_name_lower, self.old_name_lower = (\n-            self.old_name_lower,\n-            self.new_name_lower,\n-        )\n-        self.new_name, self.old_name = self.old_name, self.new_name\n+        if self.old_fields:\n+            # Get the index name that was auto-generated for the old fields\n+            from_model = from_state.apps.get_model(app_label, self.model_name)\n+            columns = [\n+                from_model._meta.get_field(field).column for field in self.old_fields\n+            ]\n+            old_index_name = schema_editor._constraint_names(\n+                from_model, column_names=columns, index=True\n+            )[0]\n+            new_index = models.Index(\n+                fields=self.old_fields,\n+                name=old_index_name,\n+            )\n+            old_index = models.Index(\n+                fields=self.old_fields,\n+                name=self.new_name,\n+            )\n+            schema_editor.rename_index(model, old_index, new_index)\n+        else:\n+            self.new_name_lower, self.old_name_lower = (\n+                self.old_name_lower,\n+                self.new_name_lower,\n+            )\n+            self.new_name, self.old_name = self.old_name, self.new_name\n \n-        self.database_forwards(app_label, schema_editor, from_state, to_state)\n+            self.database_forwards(app_label, schema_editor, from_state, to_state)\n \n-        self.new_name_lower, self.old_name_lower = (\n-            self.old_name_lower,\n-            self.new_name_lower,\n-        )\n-        self.new_name, self.old_name = self.old_name, self.new_name\n+            self.new_name_lower, self.old_name_lower = (\n+                self.old_name_lower,\n+                self.new_name_lower,\n+            )\n+            self.new_name, self.old_name = self.old_name, self.new_name\n \n     def describe(self):\n         if self.old_name:\n",
    "cost": 0,
    "edit_outcome": true,
    "lint_outcome": true,
    "test_outcome": false,
    "resolved": false
}