{
    "instance_id": "pytest-dev__pytest-5495",
    "model_name_or_path": "codebuff",
    "model_patch": "diff --git a/src/_pytest/assertion/util.py b/src/_pytest/assertion/util.py\nindex 762e5761d..7aef2c2ad 100644\n--- a/src/_pytest/assertion/util.py\n+++ b/src/_pytest/assertion/util.py\n@@ -181,7 +181,16 @@ def _diff_text(left, right, verbose=0):\n         This is done using repr() which then needs post-processing to fix the encompassing quotes and un-escape\n         newlines and carriage returns (#429).\n         \"\"\"\n-        r = str(repr(binary_text)[1:-1])\n+        if isinstance(binary_text, bytes):\n+            # For bytes, show both repr and decoded ASCII where possible\n+            r = str(repr(binary_text)[1:-1])\n+            try:\n+                decoded = binary_text.decode('ascii', errors='replace')\n+                r += \" (ASCII: {})\".format(decoded)\n+            except UnicodeError:\n+                pass\n+        else:\n+            r = str(repr(binary_text)[1:-1])\n         r = r.replace(r\"\\n\", \"\\n\")\n         r = r.replace(r\"\\r\", \"\\r\")\n         return r\n@@ -268,20 +277,29 @@ def _compare_eq_sequence(left, right, verbose=0):\n     if len_diff:\n         if len_diff > 0:\n             dir_with_more = \"Left\"\n-            extra = saferepr(left[len_right])\n+            extra = left[len_right]\n         else:\n             len_diff = 0 - len_diff\n-            dir_with_more = \"Right\"\n-            extra = saferepr(right[len_left])\n+            dir_with_more = \"Right\" \n+            extra = right[len_left]\n+\n+        if isinstance(extra, bytes):\n+            try:\n+                decoded = extra.decode('ascii', errors='replace')\n+                extra_repr = \"{} (ASCII: {})\".format(saferepr(extra), decoded)\n+            except UnicodeError:\n+                extra_repr = saferepr(extra)\n+        else:\n+            extra_repr = saferepr(extra)\n \n         if len_diff == 1:\n             explanation += [\n-                \"{} contains one more item: {}\".format(dir_with_more, extra)\n+                \"{} contains one more item: {}\".format(dir_with_more, extra_repr)\n             ]\n         else:\n             explanation += [\n                 \"%s contains %d more items, first extra item: %s\"\n-                % (dir_with_more, len_diff, extra)\n+                % (dir_with_more, len_diff, extra_repr)\n             ]\n     return explanation\n \n",
    "cost": 0,
    "edit_outcome": true,
    "lint_outcome": true,
    "test_outcome": false,
    "resolved": false
}