{
    "instance_id": "scikit-learn__scikit-learn-15512",
    "model_name_or_path": "codebuff",
    "model_patch": "diff --git a/sklearn/cluster/_affinity_propagation.py b/sklearn/cluster/_affinity_propagation.py\nindex 4806afee9..c7b96f628 100644\n--- a/sklearn/cluster/_affinity_propagation.py\n+++ b/sklearn/cluster/_affinity_propagation.py\n@@ -204,7 +204,9 @@ def affinity_propagation(S, preference=None, convergence_iter=15, max_iter=200,\n     I = np.flatnonzero(E)\n     K = I.size  # Identify exemplars\n \n-    if K > 0:\n+    converged = False\n+    if K > 0 and not unconverged:\n+        converged = True\n         c = np.argmax(S[:, I], axis=1)\n         c[I] = np.arange(K)  # Identify clusters\n         # Refine the final set of exemplars and clusters and return results\n@@ -223,12 +225,12 @@ def affinity_propagation(S, preference=None, convergence_iter=15, max_iter=200,\n         warnings.warn(\"Affinity propagation did not converge, this model \"\n                       \"will not have any cluster centers.\", ConvergenceWarning)\n         labels = np.array([-1] * n_samples)\n-        cluster_centers_indices = []\n+        cluster_centers_indices = np.array([], dtype=int)\n \n     if return_n_iter:\n-        return cluster_centers_indices, labels, it + 1\n+        return cluster_centers_indices, labels, it + 1, converged\n     else:\n-        return cluster_centers_indices, labels\n+        return cluster_centers_indices, labels, converged\n \n \n ###############################################################################\n@@ -382,7 +384,7 @@ class AffinityPropagation(ClusterMixin, BaseEstimator):\n                              \"'euclidean'. Got %s instead\"\n                              % str(self.affinity))\n \n-        self.cluster_centers_indices_, self.labels_, self.n_iter_ = \\\n+        self.cluster_centers_indices_, self.labels_, self.n_iter_, self.converged_ = \\\n             affinity_propagation(\n                 self.affinity_matrix_, self.preference, max_iter=self.max_iter,\n                 convergence_iter=self.convergence_iter, damping=self.damping,\ndiff --git a/sklearn/cluster/tests/test_affinity_propagation.py b/sklearn/cluster/tests/test_affinity_propagation.py\nindex 98f0f79ee..380364e7f 100644\n--- a/sklearn/cluster/tests/test_affinity_propagation.py\n+++ b/sklearn/cluster/tests/test_affinity_propagation.py\n@@ -103,8 +103,10 @@ def test_affinity_propagation_fit_non_convergence():\n     af = AffinityPropagation(preference=-10, max_iter=1)\n \n     assert_warns(ConvergenceWarning, af.fit, X)\n+    assert_array_equal(np.array([], dtype=int), af.cluster_centers_indices_)\n     assert_array_equal(np.empty((0, 2)), af.cluster_centers_)\n     assert_array_equal(np.array([-1, -1, -1]), af.labels_)\n+    assert not af.converged_\n \n \n def test_affinity_propagation_equal_mutual_similarities():\n",
    "cost": 0,
    "edit_outcome": true,
    "lint_outcome": true,
    "test_outcome": false,
    "resolved": false
}