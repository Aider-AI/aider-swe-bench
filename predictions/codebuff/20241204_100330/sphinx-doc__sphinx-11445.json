{
    "instance_id": "sphinx-doc__sphinx-11445",
    "model_name_or_path": "codebuff",
    "model_patch": "diff --git a/sphinx/parsers.py b/sphinx/parsers.py\nindex 3bcd69f52..0fc7e5e5f 100644\n--- a/sphinx/parsers.py\n+++ b/sphinx/parsers.py\n@@ -82,7 +82,17 @@ class RSTParser(docutils.parsers.rst.Parser, Parser):\n \n     def decorate(self, content: StringList) -> None:\n         \"\"\"Preprocess reST content before parsing.\"\"\"\n-        prepend_prolog(content, self.config.rst_prolog)\n+        # Skip prolog for the first line if it contains a domain directive\n+        if (self.config.rst_prolog and len(content) > 0 and\n+                any(content[0].startswith(f':{domain}:') for domain in self.env.domains)):\n+            # Store original first line\n+            first_line = content[0]\n+            # Prepend prolog\n+            prepend_prolog(content, self.config.rst_prolog)\n+            # Restore first line\n+            content[0] = first_line\n+        else:\n+            prepend_prolog(content, self.config.rst_prolog)\n         append_epilog(content, self.config.rst_epilog)\n \n \ndiff --git a/tests/test_parser.py b/tests/test_parser.py\nindex 86163c6ad..efafe1449 100644\n--- a/tests/test_parser.py\n+++ b/tests/test_parser.py\n@@ -35,6 +35,13 @@ def test_RSTParser_prolog_epilog(RSTStateMachine, app):\n                                       ('dummy.rst', 0, 'hello Sphinx world'),\n                                       ('dummy.rst', 1, 'Sphinx is a document generator')]\n \n+    # Test domain directive in first heading\n+    text = ':mod:`test`\\n==========\\nSphinx is a document generator'\n+    app.env.config.rst_prolog = 'this is rst_prolog\\nhello reST!'\n+    parser.parse(text, document)\n+    (content, _), _ = RSTStateMachine().run.call_args\n+    assert list(content.xitems())[0] == ('dummy.rst', 0, ':mod:`test`')\n+\n     # with rst_epilog\n     app.env.config.rst_prolog = None\n     app.env.config.rst_epilog = 'this is rst_epilog\\ngood-bye reST!'\n",
    "cost": 0,
    "edit_outcome": true,
    "lint_outcome": true,
    "test_outcome": true,
    "resolved": false
}