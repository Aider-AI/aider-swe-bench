{
    "instance_id": "sympy__sympy-18199",
    "model_name_or_path": "codebuff",
    "model_patch": "diff --git a/sympy/ntheory/residue_ntheory.py b/sympy/ntheory/residue_ntheory.py\nindex 9a3052d4c3..f2e980d138 100644\n--- a/sympy/ntheory/residue_ntheory.py\n+++ b/sympy/ntheory/residue_ntheory.py\n@@ -743,6 +743,31 @@ def _nthroot_mod1(s, q, p, all_roots):\n     return min(res)\n \n \n+\n+    a : integer\n+    n : positive integer\n+    p : positive integer\n+    all_roots : if False returns the smallest root, else the list of roots\n+\n+    Examples\n+    ========\n+\n+    >>> from sympy.ntheory.residue_ntheory import nthroot_mod\n+    >>> nthroot_mod(11, 4, 19)\n+    8\n+    >>> nthroot_mod(11, 4, 19, True)\n+    [8, 11]\n+    >>> nthroot_mod(68, 3, 109)\n+    23\n+    \"\"\"\n+    from sympy.core.numbers import igcdex\n+    a, n, p = as_int(a), as_int(n), as_int(p)\n+    if n == 2:\n+        return sqrt_mod(a, p, all_roots)\n+    # see Hackman \"Elementary Number Theory\" (2009), page 76\n+    if not is_nthpow_residue(a, n, p):\n+        return None\n+=======\n def nthroot_mod(a, n, p, all_roots=False):\n     \"\"\"\n     Find the solutions to ``x**n = a mod p``\n@@ -758,6 +783,35 @@ def nthroot_mod(a, n, p, all_roots=False):\n     Examples\n     ========\n \n+    >>> from sympy.ntheory.residue_ntheory import nthroot_mod\n+    >>> nthroot_mod(11, 4, 19)\n+    8\n+    >>> nthroot_mod(11, 4, 19, True)\n+    [8, 11]\n+    >>> nthroot_mod(68, 3, 109)\n+    23\n+    \"\"\"\n+    from sympy.core.numbers import igcdex\n+    a, n, p = as_int(a), as_int(n), as_int(p)\n+    if n == 2:\n+        return sqrt_mod(a, p, all_roots)\n+    # When a = 0 mod p, x = 0 mod p is also a root\n+    if a % p == 0:\n+        if all_roots:\n+            return [0]\n+        return 0\n+    # see Hackman \"Elementary Number Theory\" (2009), page 76\n+    if not is_nthpow_residue(a, n, p):\n+        return None=======\n+\n+    a : integer\n+    n : positive integer\n+    p : positive integer\n+    all_roots : if False returns the smallest root, else the list of roots\n+\n+    Examples\n+    ========\n+\n     >>> from sympy.ntheory.residue_ntheory import nthroot_mod\n     >>> nthroot_mod(11, 4, 19)\n     8\n",
    "cost": 0,
    "edit_outcome": true,
    "lint_outcome": true,
    "test_outcome": false,
    "resolved": false
}