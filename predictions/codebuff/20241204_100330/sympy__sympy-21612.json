{
    "instance_id": "sympy__sympy-21612",
    "model_name_or_path": "codebuff",
    "model_patch": "diff --git a/sympy/parsing/latex/_parse_latex_antlr.py b/sympy/parsing/latex/_parse_latex_antlr.py\nindex 2e4a45ad20..c5df69ffb1 100644\n--- a/sympy/parsing/latex/_parse_latex_antlr.py\n+++ b/sympy/parsing/latex/_parse_latex_antlr.py\n@@ -382,11 +382,9 @@ def convert_frac(frac):\n \n     expr_top = convert_expr(frac.upper)\n     expr_bot = convert_expr(frac.lower)\n-    inverse_denom = sympy.Pow(expr_bot, -1, evaluate=False)\n-    if expr_top == 1:\n-        return inverse_denom\n-    else:\n-        return sympy.Mul(expr_top, inverse_denom, evaluate=False)\n+    \n+    # Create fraction without evaluating to preserve structure\n+    return sympy.Mul(expr_top, sympy.Pow(expr_bot, -1, evaluate=False), evaluate=False)\n \n def convert_binom(binom):\n     expr_n = convert_expr(binom.n)\ndiff --git a/sympy/parsing/tests/test_latex.py b/sympy/parsing/tests/test_latex.py\nindex f5c61cde13..6275bb6ec8 100644\n--- a/sympy/parsing/tests/test_latex.py\n+++ b/sympy/parsing/tests/test_latex.py\n@@ -120,6 +120,7 @@ def test_import():\n     (r\"\\frac{a}{b}\", a / b),\n     (r\"\\frac{a + b}{c}\", _Mul(a + b, _Pow(c, -1))),\n     (r\"\\frac{7}{3}\", _Mul(7, _Pow(3, -1))),\n+    (r\"\\frac{\\frac{a^3+b}{c}}{\\frac{1}{c^2}}\", _Mul(_Mul(a**3 + b, _Pow(c, -1)), _Pow(_Mul(1, _Pow(c**2, -1)), -1))),\n     (r\"(\\csc x)(\\sec y)\", csc(x)*sec(y)),\n     (r\"\\lim_{x \\to 3} a\", Limit(a, x, 3)),\n     (r\"\\lim_{x \\rightarrow 3} a\", Limit(a, x, 3)),\n",
    "cost": 0,
    "edit_outcome": true,
    "lint_outcome": true,
    "test_outcome": true,
    "resolved": false
}