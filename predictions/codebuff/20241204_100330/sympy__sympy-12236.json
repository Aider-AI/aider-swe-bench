{
    "instance_id": "sympy__sympy-12236",
    "model_name_or_path": "codebuff",
    "model_patch": "diff --git a/sympy/polys/partfrac.py b/sympy/polys/partfrac.py\nindex 612b8f4607..2082cc40ab 100644\n--- a/sympy/polys/partfrac.py\n+++ b/sympy/polys/partfrac.py\n@@ -153,6 +153,7 @@ def apart_undetermined_coeffs(P, Q):\n     \"\"\"Partial fractions via method of undetermined coefficients. \"\"\"\n     X = numbered_symbols(cls=Dummy)\n     partial, symbols = [], []\n+    domain = Q.get_domain()\n \n     _, factors = Q.factor_list()\n \n@@ -164,7 +165,7 @@ def apart_undetermined_coeffs(P, Q):\n             partial.append((coeffs, q, f, i))\n             symbols.extend(coeffs)\n \n-    dom = Q.get_domain().inject(*symbols)\n+    dom = domain.inject(*symbols)\n     F = Poly(0, Q.gen, domain=dom)\n \n     for i, (coeffs, q, f, k) in enumerate(partial):\ndiff --git a/sympy/polys/tests/test_partfrac.py b/sympy/polys/tests/test_partfrac.py\nindex 707fb45871..6546b2af04 100644\n--- a/sympy/polys/tests/test_partfrac.py\n+++ b/sympy/polys/tests/test_partfrac.py\n@@ -114,6 +114,7 @@ def test_apart_undetermined_coeffs():\n \n def test_apart_list():\n     from sympy.utilities.iterables import numbered_symbols\n+    from sympy.abc import a, t, x\n \n     w0, w1, w2 = Symbol(\"w0\"), Symbol(\"w1\"), Symbol(\"w2\")\n     _a = Dummy(\"a\")\n@@ -164,6 +165,18 @@ class foo(Expr):\n     c = 1/(1 + y)\n     assert apart(e + foo()) == c + foo()\n \n+def test_apart_symbolic_coeffs():\n+    bug = a * (-t + (-t + 1) * (2 * t - 1)) / (2 * t - 1)\n+    result = apart(bug, t)\n+    expected = bug.subs(a, 1).apart().subs(1, a)\n+    assert result == expected\n+\n+    # Test with multiple symbolic coefficients\n+    expr = (a*t + b)/(t**2 + c)\n+    result = apart(expr, t)\n+    expected = expr  # Should not decompose further due to symbolic denominator\n+    assert result == expected\n+\n def test_issue_5798():\n     assert apart(\n         2*x/(x**2 + 1) - (x - 1)/(2*(x**2 + 1)) + 1/(2*(x + 1)) - 2/x) == \\\n",
    "cost": 0,
    "edit_outcome": true,
    "lint_outcome": true,
    "test_outcome": false,
    "resolved": false
}