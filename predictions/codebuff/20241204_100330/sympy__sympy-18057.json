{
    "instance_id": "sympy__sympy-18057",
    "model_name_or_path": "codebuff",
    "model_patch": "diff --git a/sympy/core/sympify.py b/sympy/core/sympify.py\nindex ed4ea6ce5e..f865d62ea4 100644\n--- a/sympy/core/sympify.py\n+++ b/sympy/core/sympify.py\n@@ -358,8 +358,13 @@ def sympify(a, locals=None, convert_xor=True, strict=False, rational=False,\n     # which does not inherit from Basic and doesn't implement\n     # _sympy_ (which is a canonical and robust way to convert\n     # anything to SymPy expression).\n-    #\n-    # As a last chance, we try to take \"a\"'s normal form via unicode()\n+    \n+    # If this is coming from an equality comparison with a Basic object,\n+    # we should not try to evaluate the repr string as it could be unsafe\n+    if inspect.stack()[1].function == '__eq__':\n+        raise TypeError(\"Cannot compare Basic with %s\" % type(a).__name__)\n+        \n+    # As a last chance, try to take \"a\"'s normal form via unicode()\n     # and try to parse it. If it fails, then we have no luck and\n     # return an exception\n     try:\n",
    "cost": 0,
    "edit_outcome": true,
    "lint_outcome": true,
    "test_outcome": false,
    "resolved": false
}