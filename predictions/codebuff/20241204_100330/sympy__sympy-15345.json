{
    "instance_id": "sympy__sympy-15345",
    "model_name_or_path": "codebuff",
    "model_patch": "diff --git a/sympy/printing/mathematica.py b/sympy/printing/mathematica.py\nindex ea7e3a2d94..68138fc76f 100644\n--- a/sympy/printing/mathematica.py\n+++ b/sympy/printing/mathematica.py\n@@ -12,6 +12,7 @@\n     \"exp\": [(lambda x: True, \"Exp\")],\n     \"log\": [(lambda x: True, \"Log\")],\n     \"sin\": [(lambda x: True, \"Sin\")],\n+    \"Max\": [(lambda x: True, \"Max\")],\n     \"cos\": [(lambda x: True, \"Cos\")],\n     \"tan\": [(lambda x: True, \"Tan\")],\n     \"cot\": [(lambda x: True, \"Cot\")],\ndiff --git a/sympy/printing/tests/test_mathematica.py b/sympy/printing/tests/test_mathematica.py\nindex dd636d0623..f6bf2a0b3b 100644\n--- a/sympy/printing/tests/test_mathematica.py\n+++ b/sympy/printing/tests/test_mathematica.py\n@@ -28,6 +28,7 @@ def test_Function():\n     assert mcode(f(x, y, z)) == \"f[x, y, z]\"\n     assert mcode(sin(x) ** cos(x)) == \"Sin[x]^Cos[x]\"\n     assert mcode(conjugate(x)) == \"Conjugate[x]\"\n+    assert mcode(Max(x, 2)) == \"Max[x, 2]\"\n \n \n def test_Pow():\n",
    "cost": 0,
    "edit_outcome": true,
    "lint_outcome": true,
    "test_outcome": true,
    "resolved": false
}