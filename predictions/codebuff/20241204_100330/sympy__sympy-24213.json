{
    "instance_id": "sympy__sympy-24213",
    "model_name_or_path": "codebuff",
    "model_patch": "diff --git a/sympy/physics/units/tests/test_unitsystem.py b/sympy/physics/units/tests/test_unitsystem.py\nindex a04f3aabb6..922699ef24 100644\n--- a/sympy/physics/units/tests/test_unitsystem.py\n+++ b/sympy/physics/units/tests/test_unitsystem.py\n@@ -84,3 +84,25 @@ def test_derived_units_must_exist_in_unit_system():\n             units = preferred_unit.atoms(Quantity)\n             for unit in units:\n                 assert unit in unit_system._units, f\"Unit {unit} is not in unit system {unit_system}\"\n+\n+def test_equivalent_dimensions_in_addition():\n+    from sympy.physics.units import Quantity, SI\n+    from sympy.physics.units.definitions import velocity, acceleration, time\n+\n+    # Create test quantities\n+    v1 = Quantity('v1')\n+    SI.set_quantity_dimension(v1, velocity)\n+    SI.set_quantity_scale_factor(v1, 2 * velocity)\n+\n+    a1 = Quantity('a1')\n+    SI.set_quantity_dimension(a1, acceleration)\n+    SI.set_quantity_scale_factor(a1, -9.8 * acceleration)\n+\n+    t1 = Quantity('t1')\n+    SI.set_quantity_dimension(t1, time)\n+    SI.set_quantity_scale_factor(t1, 5 * time)\n+\n+    # This should not raise an error since a1*t1 has same dimension as v1\n+    expr1 = a1*t1 + v1\n+    factor, dim = SI._collect_factor_and_dimension(expr1)\n+    assert SI.get_dimension_system().equivalent_dims(dim, velocity)\ndiff --git a/sympy/physics/units/unitsystem.py b/sympy/physics/units/unitsystem.py\nindex a436880c4b..5705c821c2 100644\n--- a/sympy/physics/units/unitsystem.py\n+++ b/sympy/physics/units/unitsystem.py\n@@ -175,7 +175,7 @@ def _collect_factor_and_dimension(self, expr):\n             for addend in expr.args[1:]:\n                 addend_factor, addend_dim = \\\n                     self._collect_factor_and_dimension(addend)\n-                if dim != addend_dim:\n+                if not self.get_dimension_system().equivalent_dims(dim, addend_dim):\n                     raise ValueError(\n                         'Dimension of \"{}\" is {}, '\n                         'but it should be {}'.format(\n",
    "cost": 0,
    "edit_outcome": true,
    "lint_outcome": true,
    "test_outcome": true,
    "resolved": true
}