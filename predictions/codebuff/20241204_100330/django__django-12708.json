{
    "instance_id": "django__django-12708",
    "model_name_or_path": "codebuff",
    "model_patch": "diff --git a/django/db/backends/base/schema.py b/django/db/backends/base/schema.py\nindex 61f88401ab..01b2a8ef6f 100644\n--- a/django/db/backends/base/schema.py\n+++ b/django/db/backends/base/schema.py\n@@ -403,10 +403,25 @@ class BaseDatabaseSchemaEditor:\n         meta_constraint_names = {constraint.name for constraint in model._meta.constraints}\n         meta_index_names = {constraint.name for constraint in model._meta.indexes}\n         columns = [model._meta.get_field(field).column for field in fields]\n-        constraint_names = self._constraint_names(\n+        \n+        # Get all matching constraints\n+        all_names = self._constraint_names(\n             model, columns, exclude=meta_constraint_names | meta_index_names,\n             **constraint_kwargs\n         )\n+        \n+        # When removing an index_together, we only want to remove the index constraint\n+        # and leave any unique constraints in place\n+        if constraint_kwargs.get('index', False):\n+            constraint_names = [\n+                name for name in all_names\n+                if not self._constraint_names(\n+                    model, columns, unique=True, name=name\n+                )\n+            ]\n+        else:\n+            constraint_names = all_names\n+\n         if len(constraint_names) != 1:\n             raise ValueError(\"Found wrong number (%s) of constraints for %s(%s)\" % (\n                 len(constraint_names),\n",
    "cost": 0,
    "edit_outcome": true,
    "lint_outcome": true,
    "test_outcome": false,
    "resolved": false
}