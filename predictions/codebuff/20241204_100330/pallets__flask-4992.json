{
    "instance_id": "pallets__flask-4992",
    "model_name_or_path": "codebuff",
    "model_patch": "diff --git a/CHANGES.rst b/CHANGES.rst\nindex 88bfbc68..ff3fe321 100644\n--- a/CHANGES.rst\n+++ b/CHANGES.rst\n@@ -3,6 +3,9 @@ Version 2.3.0\n \n Unreleased\n \n+-   Add ``mode`` parameter to :meth:`flask.Config.from_file` to support loading files in\n+    different modes, such as binary mode for TOML files. :issue:`5000`\n+\n -   Remove previously deprecated code. :pr:`4995`\n \n     -   The ``push`` and ``pop`` methods of the deprecated ``_app_ctx_stack`` and\ndiff --git a/src/flask/config.py b/src/flask/config.py\nindex d4fc310f..4534d33a 100644\n--- a/src/flask/config.py\n+++ b/src/flask/config.py\n@@ -234,6 +234,7 @@ class Config(dict):\n         filename: str,\n         load: t.Callable[[t.IO[t.Any]], t.Mapping],\n         silent: bool = False,\n+        mode: str = \"r\",\n     ) -> bool:\n         \"\"\"Update the values in the config from a file that is loaded\n         using the ``load`` parameter. The loaded data is passed to the\n@@ -245,7 +246,7 @@ class Config(dict):\n             app.config.from_file(\"config.json\", load=json.load)\n \n             import toml\n-            app.config.from_file(\"config.toml\", load=toml.load)\n+            app.config.from_file(\"config.toml\", load=toml.load, mode=\"rb\")\n \n         :param filename: The path to the data file. This can be an\n             absolute path or relative to the config root path.\n@@ -254,6 +255,8 @@ class Config(dict):\n         :type load: ``Callable[[Reader], Mapping]`` where ``Reader``\n             implements a ``read`` method.\n         :param silent: Ignore the file if it doesn't exist.\n+        :param mode: The mode in which to open the file. Defaults to 'r'.\n+            Use 'rb' for binary files like TOML.\n         :return: ``True`` if the file was loaded successfully.\n \n         .. versionadded:: 2.0\n@@ -261,7 +264,7 @@ class Config(dict):\n         filename = os.path.join(self.root_path, filename)\n \n         try:\n-            with open(filename) as f:\n+            with open(filename, mode=mode) as f:\n                 obj = load(f)\n         except OSError as e:\n             if silent and e.errno in (errno.ENOENT, errno.EISDIR):\ndiff --git a/tests/test_config.py b/tests/test_config.py\nindex 76c5d272..c772e8ba 100644\n--- a/tests/test_config.py\n+++ b/tests/test_config.py\n@@ -36,6 +36,12 @@ def test_config_from_file():\n     app.config.from_file(os.path.join(current_dir, \"static\", \"config.json\"), json.load)\n     common_object_test(app)\n \n+def test_config_from_file_with_mode():\n+    app = flask.Flask(__name__)\n+    current_dir = os.path.dirname(os.path.abspath(__file__))\n+    app.config.from_file(os.path.join(current_dir, \"static\", \"config.json\"), json.load, mode=\"rb\")\n+    common_object_test(app)\n+\n \n def test_from_prefixed_env(monkeypatch):\n     monkeypatch.setenv(\"FLASK_STRING\", \"value\")\n",
    "cost": 0,
    "edit_outcome": true,
    "lint_outcome": true,
    "test_outcome": true,
    "resolved": false
}