{
    "instance_id": "mwaskom__seaborn-3407",
    "model_name_or_path": "aider--gpt-4o--openrouter-anthropic-claude-3-opus",
    "model_patch": "diff --git a/seaborn/axisgrid.py b/seaborn/axisgrid.py\nindex 75349099..4dd328b9 100644\n--- a/seaborn/axisgrid.py\n+++ b/seaborn/axisgrid.py\n@@ -2102,6 +2102,21 @@ def pairplot(\n     diag_kws = {} if diag_kws is None else diag_kws.copy()\n     grid_kws = {} if grid_kws is None else grid_kws.copy()\n \n+    # Handle MultiIndex columns by flattening them\n+    if isinstance(data.columns, pd.MultiIndex):\n+        data.columns = [' '.join(map(str, col)).strip() for col in data.columns]\n+\n+    # Handle MultiIndex columns by flattening them\n+    if isinstance(data.columns, pd.MultiIndex):\n+        data.columns = [' '.join(map(str, col)).strip() for col in data.columns]\n+\n+    # Handle MultiIndex columns by flattening them\n+    if isinstance(data.columns, pd.MultiIndex):\n+        print(\"Flattening MultiIndex columns\")\n+        data.columns = [' '.join(map(str, col)).strip() for col in data.columns]\n+\n+    print(\"Data columns after flattening:\", data.columns)\n+\n     # Resolve \"auto\" diag kind\n     if diag_kind == \"auto\":\n         if hue is None:\n",
    "model": "gpt-4o",
    "cost": 8.91186,
    "added_files": [
        "seaborn/axisgrid.py"
    ],
    "gold_files": [
        "seaborn/axisgrid.py"
    ],
    "edited_files": [
        "seaborn/axisgrid.py"
    ],
    "edit_outcome": true,
    "lint_outcome": true,
    "test_outcome": false,
    "try": 1,
    "tries": 3,
    "all_results": [
        {
            "instance_id": "mwaskom__seaborn-3407",
            "model_name_or_path": "aider--gpt-4o--openrouter-anthropic-claude-3-opus",
            "model_patch": "diff --git a/seaborn/axisgrid.py b/seaborn/axisgrid.py\nindex 75349099..4dd328b9 100644\n--- a/seaborn/axisgrid.py\n+++ b/seaborn/axisgrid.py\n@@ -2102,6 +2102,21 @@ def pairplot(\n     diag_kws = {} if diag_kws is None else diag_kws.copy()\n     grid_kws = {} if grid_kws is None else grid_kws.copy()\n \n+    # Handle MultiIndex columns by flattening them\n+    if isinstance(data.columns, pd.MultiIndex):\n+        data.columns = [' '.join(map(str, col)).strip() for col in data.columns]\n+\n+    # Handle MultiIndex columns by flattening them\n+    if isinstance(data.columns, pd.MultiIndex):\n+        data.columns = [' '.join(map(str, col)).strip() for col in data.columns]\n+\n+    # Handle MultiIndex columns by flattening them\n+    if isinstance(data.columns, pd.MultiIndex):\n+        print(\"Flattening MultiIndex columns\")\n+        data.columns = [' '.join(map(str, col)).strip() for col in data.columns]\n+\n+    print(\"Data columns after flattening:\", data.columns)\n+\n     # Resolve \"auto\" diag kind\n     if diag_kind == \"auto\":\n         if hue is None:\n",
            "model": "gpt-4o",
            "cost": 0.6763300000000001,
            "added_files": [
                "seaborn/axisgrid.py"
            ],
            "gold_files": [
                "seaborn/axisgrid.py"
            ],
            "edited_files": [
                "seaborn/axisgrid.py"
            ],
            "edit_outcome": true,
            "lint_outcome": true,
            "test_outcome": false,
            "try": 1
        },
        {
            "instance_id": "mwaskom__seaborn-3407",
            "model_name_or_path": "aider--gpt-4o--openrouter-anthropic-claude-3-opus",
            "model_patch": "diff --git a/seaborn/axisgrid.py b/seaborn/axisgrid.py\nindex 75349099..3cd6115e 100644\n--- a/seaborn/axisgrid.py\n+++ b/seaborn/axisgrid.py\n@@ -1260,6 +1260,10 @@ class PairGrid(Grid):\n \n         self.x_vars = x_vars = list(x_vars)\n         self.y_vars = y_vars = list(y_vars)\n+        if isinstance(data.columns, pd.MultiIndex):\n+            data = data.copy()  # Avoid modifying original dataframe\n+            data.columns = [\"_\".join(map(str, col)).strip(\"_\") for col in data.columns.values]\n+\n         self.square_grid = self.x_vars == self.y_vars\n \n         if not x_vars:\n@@ -1665,6 +1669,8 @@ class PairGrid(Grid):\n         \"\"\"Find which variables in a DataFrame are numeric.\"\"\"\n         numeric_cols = []\n         for col in data:\n+            if isinstance(col, tuple):\n+                col = \"_\".join(map(str, col))\n             if variable_type(data[col]) == \"numeric\":\n                 numeric_cols.append(col)\n         return numeric_cols\n@@ -2111,6 +2117,7 @@ def pairplot(\n \n     # Set up the PairGrid\n     grid_kws.setdefault(\"diag_sharey\", diag_kind == \"hist\")\n+\n     grid = PairGrid(data, vars=vars, x_vars=x_vars, y_vars=y_vars, hue=hue,\n                     hue_order=hue_order, palette=palette, corner=corner,\n                     height=height, aspect=aspect, dropna=dropna, **grid_kws)\n",
            "model": "openrouter/anthropic/claude-3-opus",
            "cost": 2.11659,
            "added_files": [
                "seaborn/axisgrid.py"
            ],
            "gold_files": [
                "seaborn/axisgrid.py"
            ],
            "edited_files": [
                "seaborn/axisgrid.py"
            ],
            "edit_outcome": true,
            "lint_outcome": true,
            "test_outcome": false,
            "try": 1
        },
        {
            "instance_id": "mwaskom__seaborn-3407",
            "model_name_or_path": "aider--gpt-4o--openrouter-anthropic-claude-3-opus",
            "model_patch": "diff --git a/seaborn/axisgrid.py b/seaborn/axisgrid.py\nindex 75349099..de902e31 100644\n--- a/seaborn/axisgrid.py\n+++ b/seaborn/axisgrid.py\n@@ -2087,6 +2087,11 @@ def pairplot(\n     # Avoid circular import\n     from .distributions import histplot, kdeplot\n \n+    # Flatten MultiIndex columns if present\n+    if isinstance(data.columns, pd.MultiIndex):\n+        print(\"Flattening MultiIndex columns\")\n+        data.columns = ['_'.join(map(str, col)) for col in data.columns]\n+\n     # Handle deprecations\n     if size is not None:\n         height = size\ndiff --git a/tests/test_axisgrid.py b/tests/test_axisgrid.py\nindex ce8b0eaa..26bcbc75 100644\n--- a/tests/test_axisgrid.py\n+++ b/tests/test_axisgrid.py\n@@ -21,6 +21,17 @@ from seaborn._testing import (\n )\n from seaborn._compat import get_legend_handles\n \n+def test_pairplot_with_multiindex():\n+    data = {\n+        (\"A\", \"1\"): np.random.rand(100),\n+        (\"A\", \"2\"): np.random.rand(100),\n+        (\"B\", \"1\"): np.random.rand(100),\n+        (\"B\", \"2\"): np.random.rand(100),\n+    }\n+    df = pd.DataFrame(data)\n+    g = sns.pairplot(df)\n+    assert isinstance(g, sns.axisgrid.PairGrid)\n+\n rs = np.random.RandomState(0)\n \n \n",
            "model": "gpt-4o",
            "cost": 0.76408,
            "added_files": [
                "seaborn/axisgrid.py",
                "tests/test_axisgrid.py"
            ],
            "gold_files": [
                "seaborn/axisgrid.py"
            ],
            "edited_files": [
                "seaborn/axisgrid.py",
                "tests/test_axisgrid.py"
            ],
            "edit_outcome": true,
            "lint_outcome": false,
            "test_outcome": false,
            "try": 2
        },
        {
            "instance_id": "mwaskom__seaborn-3407",
            "model_name_or_path": "aider--gpt-4o--openrouter-anthropic-claude-3-opus",
            "model_patch": "diff --git a/seaborn/axisgrid.py b/seaborn/axisgrid.py\nindex 75349099..b5f718ce 100644\n--- a/seaborn/axisgrid.py\n+++ b/seaborn/axisgrid.py\n@@ -1487,7 +1487,11 @@ class PairGrid(Grid):\n             else:\n                 plt.sca(ax)\n \n-            vector = self.data[var]\n+            if isinstance(self.data.columns, pd.MultiIndex):\n+                vector = self.data[var[0]][var[1]]\n+            else:\n+                vector = self.data[var]\n+\n             if self._hue_var is not None:\n                 hue = self.data[self._hue_var]\n             else:\n",
            "model": "openrouter/anthropic/claude-3-opus",
            "cost": 2.387655,
            "added_files": [
                "seaborn/axisgrid.py",
                "tests/test_axisgrid.py"
            ],
            "gold_files": [
                "seaborn/axisgrid.py"
            ],
            "edited_files": [
                "seaborn/axisgrid.py"
            ],
            "edit_outcome": false,
            "lint_outcome": true,
            "test_outcome": false,
            "try": 2
        },
        {
            "instance_id": "mwaskom__seaborn-3407",
            "model_name_or_path": "aider--gpt-4o--openrouter-anthropic-claude-3-opus",
            "model_patch": "diff --git a/seaborn/axisgrid.py b/seaborn/axisgrid.py\nindex 75349099..6643a853 100644\n--- a/seaborn/axisgrid.py\n+++ b/seaborn/axisgrid.py\n@@ -2102,7 +2102,9 @@ def pairplot(\n     diag_kws = {} if diag_kws is None else diag_kws.copy()\n     grid_kws = {} if grid_kws is None else grid_kws.copy()\n \n-    # Resolve \"auto\" diag kind\n+    # Flatten MultiIndex columns if present\n+    if isinstance(data.columns, pd.MultiIndex):\n+        data.columns = ['_'.join(map(str, col)) for col in data.columns]\n     if diag_kind == \"auto\":\n         if hue is None:\n             diag_kind = \"kde\" if kind == \"kde\" else \"hist\"\ndiff --git a/tests/test_axisgrid.py b/tests/test_axisgrid.py\nindex ce8b0eaa..c257fb87 100644\n--- a/tests/test_axisgrid.py\n+++ b/tests/test_axisgrid.py\n@@ -8,6 +8,7 @@ import numpy.testing as npt\n from numpy.testing import assert_array_equal, assert_array_almost_equal\n import pandas.testing as tm\n \n+import seaborn as sns\n from seaborn._oldcore import categorical_order\n from seaborn import rcmod\n from seaborn.palettes import color_palette\n@@ -24,7 +25,18 @@ from seaborn._compat import get_legend_handles\n rs = np.random.RandomState(0)\n \n \n-class TestFacetGrid:\n+def test_pairplot_with_multiindex():\n+    data = {\n+        (\"A\", \"1\"): np.random.rand(100),\n+        (\"A\", \"2\"): np.random.rand(100),\n+        (\"B\", \"1\"): np.random.rand(100),\n+        (\"B\", \"2\"): np.random.rand(100),\n+    }\n+    df = pd.DataFrame(data)\n+    try:\n+        sns.pairplot(df)\n+    except KeyError:\n+        pytest.fail(\"pairplot raised KeyError with MultiIndex DataFrame\")\n \n     df = pd.DataFrame(dict(x=rs.normal(size=60),\n                            y=rs.gamma(4, size=60),\n",
            "model": "gpt-4o",
            "cost": 0.8481550000000001,
            "added_files": [
                "seaborn/axisgrid.py",
                "tests/test_axisgrid.py"
            ],
            "gold_files": [
                "seaborn/axisgrid.py"
            ],
            "edited_files": [
                "seaborn/axisgrid.py",
                "tests/test_axisgrid.py"
            ],
            "edit_outcome": true,
            "lint_outcome": true,
            "test_outcome": false,
            "try": 3
        },
        {
            "instance_id": "mwaskom__seaborn-3407",
            "model_name_or_path": "aider--gpt-4o--openrouter-anthropic-claude-3-opus",
            "model_patch": "diff --git a/seaborn/axisgrid.py b/seaborn/axisgrid.py\nindex 75349099..726a22a5 100644\n--- a/seaborn/axisgrid.py\n+++ b/seaborn/axisgrid.py\n@@ -1258,6 +1258,9 @@ class PairGrid(Grid):\n         if np.isscalar(y_vars):\n             y_vars = [y_vars]\n \n+        if isinstance(data.columns, pd.MultiIndex):\n+            data.columns = [\"_\".join(map(str, col)).strip(\"_\") for col in data.columns.values]\n+\n         self.x_vars = x_vars = list(x_vars)\n         self.y_vars = y_vars = list(y_vars)\n         self.square_grid = self.x_vars == self.y_vars\n@@ -1487,7 +1490,13 @@ class PairGrid(Grid):\n             else:\n                 plt.sca(ax)\n \n-            vector = self.data[var]\n+            if isinstance(self.data.columns, pd.MultiIndex):\n+                vector = self.data.xs(var, axis=1, level=self.data.columns.names.index(var[0]))\n+            else:\n+                if isinstance(var, tuple):\n+                    vector = self.data.xs(var[0], level=var[0], axis=1).xs(var[1], level=var[1], axis=1)\n+                else:\n+                    vector = self.data[var]\n             if self._hue_var is not None:\n                 hue = self.data[self._hue_var]\n             else:\n@@ -1584,9 +1593,15 @@ class PairGrid(Grid):\n             plt.sca(ax)\n \n         if x_var == y_var:\n-            axes_vars = [x_var]\n+            if isinstance(x_var, tuple):\n+                axes_vars = [x_var[0]]\n+            else:\n+                axes_vars = [x_var]\n         else:\n-            axes_vars = [x_var, y_var]\n+            if isinstance(x_var, tuple):\n+                axes_vars = [x_var[0], y_var[0]]\n+            else:\n+                axes_vars = [x_var, y_var]\n \n         if self._hue_var is not None and self._hue_var not in axes_vars:\n             axes_vars.append(self._hue_var)\n@@ -2098,6 +2113,9 @@ def pairplot(\n         raise TypeError(\n             f\"'data' must be pandas DataFrame object, not: {type(data)}\")\n \n+    if isinstance(data.columns, pd.MultiIndex):\n+        data.columns = [\"_\".join(map(str, col)).strip(\"_\") for col in data.columns.values]\n+\n     plot_kws = {} if plot_kws is None else plot_kws.copy()\n     diag_kws = {} if diag_kws is None else diag_kws.copy()\n     grid_kws = {} if grid_kws is None else grid_kws.copy()\n",
            "model": "openrouter/anthropic/claude-3-opus",
            "cost": 2.1190499999999997,
            "added_files": [
                "seaborn/axisgrid.py"
            ],
            "gold_files": [
                "seaborn/axisgrid.py"
            ],
            "edited_files": [
                "seaborn/axisgrid.py"
            ],
            "edit_outcome": true,
            "lint_outcome": true,
            "test_outcome": false,
            "try": 3
        }
    ],
    "resolved": false
}