{
    "instance_id": "sympy__sympy-14024",
    "model_name_or_path": "aider--gpt-4o--openrouter-anthropic-claude-3-opus",
    "model_patch": "diff --git a/sympy/core/power.py b/sympy/core/power.py\nindex 02ec6480cb..35a5b642e1 100644\n--- a/sympy/core/power.py\n+++ b/sympy/core/power.py\n@@ -397,6 +397,13 @@ def _n2(e):\n         if s is not None:\n             return s*Pow(b, e*other)\n \n+        # Handle the case where (-a)**x * a**(-x) should simplify to (-1)**x\n+        if b.is_Mul:\n+            bases = [arg.base for arg in b.args if arg.is_Pow]\n+            exponents = [arg.exp for arg in b.args if arg.is_Pow]\n+            if len(bases) == 2 and bases[0] == -bases[1] and exponents[0] == -exponents[1]:\n+                return (-1)**exponents[0]\n+\n     def _eval_Mod(self, q):\n         if self.exp.is_integer and self.exp.is_positive:\n             if q.is_integer and self.base % q == 0:\ndiff --git a/sympy/simplify/simplify.py b/sympy/simplify/simplify.py\nindex 1acc00be3a..478773999f 100644\n--- a/sympy/simplify/simplify.py\n+++ b/sympy/simplify/simplify.py\n@@ -573,6 +573,13 @@ def shorter(*choices):\n \n     expr = piecewise_fold(expr)\n \n+    # Handle the case where (-a)**x * a**(-x) should simplify to (-1)**x\n+    if expr.is_Mul:\n+        bases = [arg.base for arg in expr.args if arg.is_Pow]\n+        exponents = [arg.exp for arg in expr.args if arg.is_Pow]\n+        if len(bases) == 2 and bases[0] == -bases[1] and exponents[0] == -exponents[1]:\n+            expr = (-1)**exponents[0]\n+\n     if expr.has(BesselBase):\n         expr = besselsimp(expr)\n \n",
    "model": "gpt-4o",
    "cost": 0.35636,
    "added_files": [
        "sympy/core/power.py",
        "sympy/simplify/simplify.py"
    ],
    "gold_files": [
        "sympy/core/numbers.py"
    ],
    "edited_files": [
        "sympy/core/power.py",
        "sympy/simplify/simplify.py"
    ],
    "edit_outcome": true,
    "lint_outcome": true,
    "test_outcome": true,
    "try": 1,
    "tries": 2,
    "all_results": [
        {
            "instance_id": "sympy__sympy-14024",
            "model_name_or_path": "aider--gpt-4o--openrouter-anthropic-claude-3-opus",
            "model_patch": "diff --git a/sympy/core/power.py b/sympy/core/power.py\nindex 02ec6480cb..35a5b642e1 100644\n--- a/sympy/core/power.py\n+++ b/sympy/core/power.py\n@@ -397,6 +397,13 @@ def _n2(e):\n         if s is not None:\n             return s*Pow(b, e*other)\n \n+        # Handle the case where (-a)**x * a**(-x) should simplify to (-1)**x\n+        if b.is_Mul:\n+            bases = [arg.base for arg in b.args if arg.is_Pow]\n+            exponents = [arg.exp for arg in b.args if arg.is_Pow]\n+            if len(bases) == 2 and bases[0] == -bases[1] and exponents[0] == -exponents[1]:\n+                return (-1)**exponents[0]\n+\n     def _eval_Mod(self, q):\n         if self.exp.is_integer and self.exp.is_positive:\n             if q.is_integer and self.base % q == 0:\ndiff --git a/sympy/simplify/simplify.py b/sympy/simplify/simplify.py\nindex 1acc00be3a..478773999f 100644\n--- a/sympy/simplify/simplify.py\n+++ b/sympy/simplify/simplify.py\n@@ -573,6 +573,13 @@ def shorter(*choices):\n \n     expr = piecewise_fold(expr)\n \n+    # Handle the case where (-a)**x * a**(-x) should simplify to (-1)**x\n+    if expr.is_Mul:\n+        bases = [arg.base for arg in expr.args if arg.is_Pow]\n+        exponents = [arg.exp for arg in expr.args if arg.is_Pow]\n+        if len(bases) == 2 and bases[0] == -bases[1] and exponents[0] == -exponents[1]:\n+            expr = (-1)**exponents[0]\n+\n     if expr.has(BesselBase):\n         expr = besselsimp(expr)\n \n",
            "model": "gpt-4o",
            "cost": 0.35636,
            "added_files": [
                "sympy/core/power.py",
                "sympy/simplify/simplify.py"
            ],
            "gold_files": [
                "sympy/core/numbers.py"
            ],
            "edited_files": [
                "sympy/core/power.py",
                "sympy/simplify/simplify.py"
            ],
            "edit_outcome": true,
            "lint_outcome": true,
            "test_outcome": true,
            "try": 1
        }
    ],
    "resolved": false
}