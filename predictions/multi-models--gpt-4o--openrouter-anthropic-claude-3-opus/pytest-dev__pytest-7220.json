{
    "instance_id": "pytest-dev__pytest-7220",
    "model_name_or_path": "aider--gpt-4o--openrouter-anthropic-claude-3-opus",
    "model_patch": "diff --git a/src/_pytest/terminal.py b/src/_pytest/terminal.py\nindex 8ecb5a16b..e89f3c598 100644\n--- a/src/_pytest/terminal.py\n+++ b/src/_pytest/terminal.py\n@@ -264,6 +264,7 @@ class TerminalReporter:\n         import _pytest.config\n \n         self.config = config\n+        self._original_working_dir = py.path.local()\n         self._numcollected = 0\n         self._session = None  # type: Optional[Session]\n         self._showfspath = None\n@@ -334,7 +335,7 @@ class TerminalReporter:\n         return char in self.reportchars\n \n     def write_fspath_result(self, nodeid, res, **markup):\n-        fspath = self.config.rootdir.join(nodeid.split(\"::\")[0])\n+        fspath = self._original_working_dir.join(nodeid.split(\"::\")[0])\n         # NOTE: explicitly check for None to work around py bug, and for less\n         # overhead in general (https://github.com/pytest-dev/py/pull/207).\n         if self.currentfspath is None or fspath != self.currentfspath:\n@@ -1122,7 +1123,11 @@ def _get_pos(config, rep):\n \n def _get_line_with_reprcrash_message(config, rep, termwidth):\n     \"\"\"Get summary line for a report, trying to add reprcrash message.\"\"\"\n-    from wcwidth import wcswidth\n+    try:\n+        from wcwidth import wcswidth\n+    except ImportError:\n+        def wcswidth(text):\n+            return len(text)\n \n     verbose_word = rep._get_verbose_word(config)\n     pos = _get_pos(config, rep)\n",
    "model": "gpt-4o",
    "cost": 0.327955,
    "added_files": [
        "src/_pytest/terminal.py"
    ],
    "gold_files": [
        "src/_pytest/nodes.py"
    ],
    "edited_files": [
        "src/_pytest/terminal.py"
    ],
    "edit_outcome": true,
    "lint_outcome": true,
    "test_outcome": true,
    "try": 1,
    "tries": 2,
    "all_results": [
        {
            "instance_id": "pytest-dev__pytest-7220",
            "model_name_or_path": "aider--gpt-4o--openrouter-anthropic-claude-3-opus",
            "model_patch": "diff --git a/src/_pytest/terminal.py b/src/_pytest/terminal.py\nindex 8ecb5a16b..e89f3c598 100644\n--- a/src/_pytest/terminal.py\n+++ b/src/_pytest/terminal.py\n@@ -264,6 +264,7 @@ class TerminalReporter:\n         import _pytest.config\n \n         self.config = config\n+        self._original_working_dir = py.path.local()\n         self._numcollected = 0\n         self._session = None  # type: Optional[Session]\n         self._showfspath = None\n@@ -334,7 +335,7 @@ class TerminalReporter:\n         return char in self.reportchars\n \n     def write_fspath_result(self, nodeid, res, **markup):\n-        fspath = self.config.rootdir.join(nodeid.split(\"::\")[0])\n+        fspath = self._original_working_dir.join(nodeid.split(\"::\")[0])\n         # NOTE: explicitly check for None to work around py bug, and for less\n         # overhead in general (https://github.com/pytest-dev/py/pull/207).\n         if self.currentfspath is None or fspath != self.currentfspath:\n@@ -1122,7 +1123,11 @@ def _get_pos(config, rep):\n \n def _get_line_with_reprcrash_message(config, rep, termwidth):\n     \"\"\"Get summary line for a report, trying to add reprcrash message.\"\"\"\n-    from wcwidth import wcswidth\n+    try:\n+        from wcwidth import wcswidth\n+    except ImportError:\n+        def wcswidth(text):\n+            return len(text)\n \n     verbose_word = rep._get_verbose_word(config)\n     pos = _get_pos(config, rep)\n",
            "model": "gpt-4o",
            "cost": 0.327955,
            "added_files": [
                "src/_pytest/terminal.py"
            ],
            "gold_files": [
                "src/_pytest/nodes.py"
            ],
            "edited_files": [
                "src/_pytest/terminal.py"
            ],
            "edit_outcome": true,
            "lint_outcome": true,
            "test_outcome": true,
            "try": 1
        }
    ],
    "resolved": false
}