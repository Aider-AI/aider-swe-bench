{
    "instance_id": "sympy__sympy-24152",
    "model_name_or_path": "aider--gpt-4o--openrouter-anthropic-claude-3-opus",
    "model_patch": "diff --git a/sympy/physics/quantum/tensorproduct.py b/sympy/physics/quantum/tensorproduct.py\nindex 78accaf295..8f830dfeff 100644\n--- a/sympy/physics/quantum/tensorproduct.py\n+++ b/sympy/physics/quantum/tensorproduct.py\n@@ -246,6 +246,11 @@ def _eval_expand_tensorproduct(self, **hints):\n             if isinstance(args[i], Add):\n                 for aa in args[i].args:\n                     tp = TensorProduct(*args[:i] + (aa,) + args[i + 1:])\n+                    c_part, nc_part = tp.args_cnc()\n+                    if len(nc_part) == 1 and isinstance(nc_part[0], TensorProduct):\n+                        nc_part = (nc_part[0]._eval_expand_tensorproduct(),)\n+                    add_args.append(Mul(*c_part) * Mul(*nc_part))\n+                    continue\n                     if isinstance(tp, TensorProduct):\n                         tp = tp._eval_expand_tensorproduct()\n                     add_args.append(tp)\n",
    "model": "gpt-4o",
    "cost": 0.21159,
    "added_files": [
        "sympy/physics/quantum/tensorproduct.py"
    ],
    "gold_files": [
        "sympy/physics/quantum/tensorproduct.py"
    ],
    "edited_files": [
        "sympy/physics/quantum/tensorproduct.py"
    ],
    "edit_outcome": true,
    "lint_outcome": true,
    "test_outcome": true,
    "try": 1,
    "tries": 2,
    "all_results": [
        {
            "instance_id": "sympy__sympy-24152",
            "model_name_or_path": "aider--gpt-4o--openrouter-anthropic-claude-3-opus",
            "model_patch": "diff --git a/sympy/physics/quantum/tensorproduct.py b/sympy/physics/quantum/tensorproduct.py\nindex 78accaf295..8f830dfeff 100644\n--- a/sympy/physics/quantum/tensorproduct.py\n+++ b/sympy/physics/quantum/tensorproduct.py\n@@ -246,6 +246,11 @@ def _eval_expand_tensorproduct(self, **hints):\n             if isinstance(args[i], Add):\n                 for aa in args[i].args:\n                     tp = TensorProduct(*args[:i] + (aa,) + args[i + 1:])\n+                    c_part, nc_part = tp.args_cnc()\n+                    if len(nc_part) == 1 and isinstance(nc_part[0], TensorProduct):\n+                        nc_part = (nc_part[0]._eval_expand_tensorproduct(),)\n+                    add_args.append(Mul(*c_part) * Mul(*nc_part))\n+                    continue\n                     if isinstance(tp, TensorProduct):\n                         tp = tp._eval_expand_tensorproduct()\n                     add_args.append(tp)\n",
            "model": "gpt-4o",
            "cost": 0.21159,
            "added_files": [
                "sympy/physics/quantum/tensorproduct.py"
            ],
            "gold_files": [
                "sympy/physics/quantum/tensorproduct.py"
            ],
            "edited_files": [
                "sympy/physics/quantum/tensorproduct.py"
            ],
            "edit_outcome": true,
            "lint_outcome": true,
            "test_outcome": true,
            "try": 1
        }
    ],
    "resolved": true
}