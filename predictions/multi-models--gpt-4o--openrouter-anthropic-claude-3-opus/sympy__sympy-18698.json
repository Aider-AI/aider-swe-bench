{
    "instance_id": "sympy__sympy-18698",
    "model_name_or_path": "aider--gpt-4o--openrouter-anthropic-claude-3-opus",
    "model_patch": "diff --git a/sympy/polys/polytools.py b/sympy/polys/polytools.py\nindex c9e77a901f..d9a45b39b9 100644\n--- a/sympy/polys/polytools.py\n+++ b/sympy/polys/polytools.py\n@@ -3234,7 +3234,14 @@ def sqf_list(f, all=False):\n         else:  # pragma: no cover\n             raise OperationNotSupported(f, 'sqf_list')\n \n-        return f.rep.dom.to_sympy(coeff), [(f.per(g), k) for g, k in factors]\n+        combined_factors = {}\n+        for factor, multiplicity in factors:\n+            if factor in combined_factors:\n+                combined_factors[factor] += multiplicity\n+            else:\n+                combined_factors[factor] = multiplicity\n+\n+        return f.rep.dom.to_sympy(coeff), [(f.per(g), k) for g, k in combined_factors.items()]\n \n     def sqf_list_include(f, all=False):\n         \"\"\"\ndiff --git a/sympy/polys/tests/test_polytools.py b/sympy/polys/tests/test_polytools.py\nindex 82e5f4d6dd..2fd7cd4141 100644\n--- a/sympy/polys/tests/test_polytools.py\n+++ b/sympy/polys/tests/test_polytools.py\n@@ -674,7 +674,12 @@ def test_Poly_sub():\n     assert 1 - Poly(x, x) == Poly(1 - x, x)\n \n \n-def test_Poly_mul():\n+def test_sqf_list():\n+    f = (x**2 + 1) * (x - 1)**2 * (x - 2)**3 * (x - 3)**3\n+    assert sqf_list(f) == (1, [(x**2 + 1, 1), (x - 1, 2), (x - 2, 3), (x - 3, 3)])\n+\n+    f = x**5 - 2*x**4 - 2*x**3 + 4*x**2 + x - 2\n+    assert sqf_list(f) == (1, [(x - 2, 1), (x**2 - 1, 2)])\n     assert Poly(0, x).mul(Poly(0, x)) == Poly(0, x)\n     assert Poly(0, x) * Poly(0, x) == Poly(0, x)\n \n",
    "model": "gpt-4o",
    "cost": 0.6827450000000002,
    "added_files": [
        "sympy/polys/polytools.py",
        "sympy/polys/tests/test_polytools.py"
    ],
    "gold_files": [
        "sympy/polys/polytools.py"
    ],
    "edited_files": [
        "sympy/polys/polytools.py",
        "sympy/polys/tests/test_polytools.py"
    ],
    "edit_outcome": true,
    "lint_outcome": true,
    "test_outcome": true,
    "try": 1,
    "tries": 2,
    "all_results": [
        {
            "instance_id": "sympy__sympy-18698",
            "model_name_or_path": "aider--gpt-4o--openrouter-anthropic-claude-3-opus",
            "model_patch": "diff --git a/sympy/polys/polytools.py b/sympy/polys/polytools.py\nindex c9e77a901f..d9a45b39b9 100644\n--- a/sympy/polys/polytools.py\n+++ b/sympy/polys/polytools.py\n@@ -3234,7 +3234,14 @@ def sqf_list(f, all=False):\n         else:  # pragma: no cover\n             raise OperationNotSupported(f, 'sqf_list')\n \n-        return f.rep.dom.to_sympy(coeff), [(f.per(g), k) for g, k in factors]\n+        combined_factors = {}\n+        for factor, multiplicity in factors:\n+            if factor in combined_factors:\n+                combined_factors[factor] += multiplicity\n+            else:\n+                combined_factors[factor] = multiplicity\n+\n+        return f.rep.dom.to_sympy(coeff), [(f.per(g), k) for g, k in combined_factors.items()]\n \n     def sqf_list_include(f, all=False):\n         \"\"\"\ndiff --git a/sympy/polys/tests/test_polytools.py b/sympy/polys/tests/test_polytools.py\nindex 82e5f4d6dd..2fd7cd4141 100644\n--- a/sympy/polys/tests/test_polytools.py\n+++ b/sympy/polys/tests/test_polytools.py\n@@ -674,7 +674,12 @@ def test_Poly_sub():\n     assert 1 - Poly(x, x) == Poly(1 - x, x)\n \n \n-def test_Poly_mul():\n+def test_sqf_list():\n+    f = (x**2 + 1) * (x - 1)**2 * (x - 2)**3 * (x - 3)**3\n+    assert sqf_list(f) == (1, [(x**2 + 1, 1), (x - 1, 2), (x - 2, 3), (x - 3, 3)])\n+\n+    f = x**5 - 2*x**4 - 2*x**3 + 4*x**2 + x - 2\n+    assert sqf_list(f) == (1, [(x - 2, 1), (x**2 - 1, 2)])\n     assert Poly(0, x).mul(Poly(0, x)) == Poly(0, x)\n     assert Poly(0, x) * Poly(0, x) == Poly(0, x)\n \n",
            "model": "gpt-4o",
            "cost": 0.6827450000000002,
            "added_files": [
                "sympy/polys/polytools.py",
                "sympy/polys/tests/test_polytools.py"
            ],
            "gold_files": [
                "sympy/polys/polytools.py"
            ],
            "edited_files": [
                "sympy/polys/polytools.py",
                "sympy/polys/tests/test_polytools.py"
            ],
            "edit_outcome": true,
            "lint_outcome": true,
            "test_outcome": true,
            "try": 1
        }
    ],
    "resolved": false
}