{
    "instance_id": "scikit-learn__scikit-learn-11040",
    "model_name_or_path": "aider--gpt-4o--openrouter-anthropic-claude-3-opus",
    "model_patch": "diff --git a/sklearn/neighbors/base.py b/sklearn/neighbors/base.py\nindex 3e5e729c2..67f13d601 100644\n--- a/sklearn/neighbors/base.py\n+++ b/sklearn/neighbors/base.py\n@@ -24,6 +24,7 @@ from ..externals import six\n from ..externals.joblib import Parallel, delayed\n from ..exceptions import NotFittedError\n from ..exceptions import DataConversionWarning\n+import numbers\n \n VALID_METRICS = dict(ball_tree=BallTree.valid_metrics,\n                      kd_tree=KDTree.valid_metrics,\n@@ -107,6 +108,12 @@ class NeighborsBase(six.with_metaclass(ABCMeta, BaseEstimator)):\n                  algorithm='auto', leaf_size=30, metric='minkowski',\n                  p=2, metric_params=None, n_jobs=1):\n \n+        if n_neighbors is not None:\n+            if not isinstance(n_neighbors, numbers.Integral):\n+                raise TypeError(\n+                    \"n_neighbors does not take %s value, \"\n+                    \"enter integer value\" %\n+                    type(n_neighbors))\n         self.n_neighbors = n_neighbors\n         self.radius = radius\n         self.algorithm = algorithm\n@@ -327,6 +334,11 @@ class KNeighborsMixin(object):\n \n         if n_neighbors is None:\n             n_neighbors = self.n_neighbors\n+        elif not isinstance(n_neighbors, numbers.Integral):\n+            raise TypeError(\n+                \"n_neighbors does not take %s value, \"\n+                \"enter integer value\" %\n+                type(n_neighbors))\n \n         if X is not None:\n             query_is_train = False\n",
    "model": "openrouter/anthropic/claude-3-opus",
    "cost": 0.88583,
    "added_files": [
        "sklearn/neighbors/base.py",
        "sklearn/neighbors/unsupervised.py"
    ],
    "gold_files": [
        "sklearn/neighbors/base.py"
    ],
    "edited_files": [
        "sklearn/neighbors/base.py"
    ],
    "edit_outcome": true,
    "lint_outcome": true,
    "test_outcome": true,
    "try": 1,
    "tries": 2,
    "all_results": [
        {
            "instance_id": "scikit-learn__scikit-learn-11040",
            "model_name_or_path": "aider--gpt-4o--openrouter-anthropic-claude-3-opus",
            "model_patch": "",
            "model": "gpt-4o",
            "cost": 0.16992500000000002,
            "added_files": [],
            "gold_files": [
                "sklearn/neighbors/base.py"
            ],
            "edited_files": [],
            "edit_outcome": null,
            "lint_outcome": null,
            "test_outcome": null,
            "try": 1
        },
        {
            "instance_id": "scikit-learn__scikit-learn-11040",
            "model_name_or_path": "aider--gpt-4o--openrouter-anthropic-claude-3-opus",
            "model_patch": "diff --git a/sklearn/neighbors/base.py b/sklearn/neighbors/base.py\nindex 3e5e729c2..67f13d601 100644\n--- a/sklearn/neighbors/base.py\n+++ b/sklearn/neighbors/base.py\n@@ -24,6 +24,7 @@ from ..externals import six\n from ..externals.joblib import Parallel, delayed\n from ..exceptions import NotFittedError\n from ..exceptions import DataConversionWarning\n+import numbers\n \n VALID_METRICS = dict(ball_tree=BallTree.valid_metrics,\n                      kd_tree=KDTree.valid_metrics,\n@@ -107,6 +108,12 @@ class NeighborsBase(six.with_metaclass(ABCMeta, BaseEstimator)):\n                  algorithm='auto', leaf_size=30, metric='minkowski',\n                  p=2, metric_params=None, n_jobs=1):\n \n+        if n_neighbors is not None:\n+            if not isinstance(n_neighbors, numbers.Integral):\n+                raise TypeError(\n+                    \"n_neighbors does not take %s value, \"\n+                    \"enter integer value\" %\n+                    type(n_neighbors))\n         self.n_neighbors = n_neighbors\n         self.radius = radius\n         self.algorithm = algorithm\n@@ -327,6 +334,11 @@ class KNeighborsMixin(object):\n \n         if n_neighbors is None:\n             n_neighbors = self.n_neighbors\n+        elif not isinstance(n_neighbors, numbers.Integral):\n+            raise TypeError(\n+                \"n_neighbors does not take %s value, \"\n+                \"enter integer value\" %\n+                type(n_neighbors))\n \n         if X is not None:\n             query_is_train = False\n",
            "model": "openrouter/anthropic/claude-3-opus",
            "cost": 0.715905,
            "added_files": [
                "sklearn/neighbors/base.py",
                "sklearn/neighbors/unsupervised.py"
            ],
            "gold_files": [
                "sklearn/neighbors/base.py"
            ],
            "edited_files": [
                "sklearn/neighbors/base.py"
            ],
            "edit_outcome": true,
            "lint_outcome": true,
            "test_outcome": true,
            "try": 1
        }
    ],
    "resolved": false
}