{
    "instance_id": "django__django-13028",
    "model_name_or_path": "aider--gpt-4o--openrouter-anthropic-claude-3-opus",
    "model_patch": "diff --git a/django/db/models/sql/query.py b/django/db/models/sql/query.py\nindex ce18098fd2..034cd6e738 100644\n--- a/django/db/models/sql/query.py\n+++ b/django/db/models/sql/query.py\n@@ -1125,10 +1125,13 @@ class Query(BaseExpression):\n     def check_filterable(self, expression):\n         \"\"\"Raise an error if expression cannot be used in a WHERE clause.\"\"\"\n         if not getattr(expression, 'filterable', True):\n-            raise NotSupportedError(\n-                expression.__class__.__name__ + ' is disallowed in the filter '\n-                'clause.'\n+            warnings.warn(\n+                expression.__class__.__name__ + ' is marked as non-filterable. '\n+                'This may lead to unexpected behavior.',\n+                category=RemovedInDjango40Warning,\n+                stacklevel=2,\n             )\n+            return\n         if hasattr(expression, 'get_source_expressions'):\n             for expr in expression.get_source_expressions():\n                 self.check_filterable(expr)\n",
    "model": "gpt-4o",
    "cost": 0.309195,
    "added_files": [
        "django/db/models/sql/query.py"
    ],
    "gold_files": [
        "django/db/models/sql/query.py"
    ],
    "edited_files": [
        "django/db/models/sql/query.py"
    ],
    "edit_outcome": true,
    "lint_outcome": true,
    "test_outcome": true,
    "try": 1,
    "tries": 2,
    "all_results": [
        {
            "instance_id": "django__django-13028",
            "model_name_or_path": "aider--gpt-4o--openrouter-anthropic-claude-3-opus",
            "model_patch": "diff --git a/django/db/models/sql/query.py b/django/db/models/sql/query.py\nindex ce18098fd2..034cd6e738 100644\n--- a/django/db/models/sql/query.py\n+++ b/django/db/models/sql/query.py\n@@ -1125,10 +1125,13 @@ class Query(BaseExpression):\n     def check_filterable(self, expression):\n         \"\"\"Raise an error if expression cannot be used in a WHERE clause.\"\"\"\n         if not getattr(expression, 'filterable', True):\n-            raise NotSupportedError(\n-                expression.__class__.__name__ + ' is disallowed in the filter '\n-                'clause.'\n+            warnings.warn(\n+                expression.__class__.__name__ + ' is marked as non-filterable. '\n+                'This may lead to unexpected behavior.',\n+                category=RemovedInDjango40Warning,\n+                stacklevel=2,\n             )\n+            return\n         if hasattr(expression, 'get_source_expressions'):\n             for expr in expression.get_source_expressions():\n                 self.check_filterable(expr)\n",
            "model": "gpt-4o",
            "cost": 0.309195,
            "added_files": [
                "django/db/models/sql/query.py"
            ],
            "gold_files": [
                "django/db/models/sql/query.py"
            ],
            "edited_files": [
                "django/db/models/sql/query.py"
            ],
            "edit_outcome": true,
            "lint_outcome": true,
            "test_outcome": true,
            "try": 1
        }
    ],
    "resolved": false
}