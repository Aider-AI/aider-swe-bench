{
    "instance_id": "django__django-13964",
    "model_name_or_path": "aider--gpt-4o--openrouter-anthropic-claude-3-opus",
    "model_patch": "diff --git a/django/db/models/fields/related_descriptors.py b/django/db/models/fields/related_descriptors.py\nindex 872a4c98dc..0645694137 100644\n--- a/django/db/models/fields/related_descriptors.py\n+++ b/django/db/models/fields/related_descriptors.py\n@@ -254,7 +254,12 @@ class ForwardManyToOneDescriptor:\n         # Set the values of the related field.\n         else:\n             for lh_field, rh_field in self.field.related_fields:\n-                setattr(instance, lh_field.attname, getattr(value, rh_field.attname))\n+                rh_val = getattr(value, rh_field.attname)\n+                if rh_val != getattr(value, rh_field.name):\n+                    # If the primary key has been modified, and differs from\n+                    # the raw field value, use the primary key's value instead.\n+                    rh_val = getattr(value, rh_field.name)\n+                setattr(instance, lh_field.attname, rh_val)\n \n         # Set the related instance cache used by __get__ to avoid an SQL query\n         # when accessing the attribute we just set.\n",
    "model": "openrouter/anthropic/claude-3-opus",
    "cost": 1.293945,
    "added_files": [
        "django/db/models/fields/related_descriptors.py"
    ],
    "gold_files": [
        "django/db/models/base.py"
    ],
    "edited_files": [
        "django/db/models/fields/related_descriptors.py"
    ],
    "edit_outcome": true,
    "lint_outcome": true,
    "test_outcome": true,
    "try": 1,
    "tries": 2,
    "all_results": [
        {
            "instance_id": "django__django-13964",
            "model_name_or_path": "aider--gpt-4o--openrouter-anthropic-claude-3-opus",
            "model_patch": "diff --git a/django/db/models/base.py b/django/db/models/base.py\nindex 2428218696..600b95f01e 100644\n--- a/django/db/models/base.py\n+++ b/django/db/models/base.py\n@@ -926,13 +926,17 @@ class Model(metaclass=ModelBase):\n                 # constraints aren't supported by the database, there's the\n                 # unavoidable risk of data corruption.\n                 if obj.pk is None:\n-                    # Remove the object from a related instance cache.\n-                    if not field.remote_field.multiple:\n-                        field.remote_field.delete_cached_value(obj)\n-                    raise ValueError(\n-                        \"%s() prohibited to prevent data loss due to unsaved \"\n-                        \"related object '%s'.\" % (operation_name, field.name)\n-                    )\n+                    # If the related object has a primary key, set it on the instance.\n+                    if obj.pk is not None:\n+                        setattr(self, field.attname, obj.pk)\n+                    else:\n+                        # Remove the object from a related instance cache.\n+                        if not field.remote_field.multiple:\n+                            field.remote_field.delete_cached_value(obj)\n+                        raise ValueError(\n+                            \"%s() prohibited to prevent data loss due to unsaved \"\n+                            \"related object '%s'.\" % (operation_name, field.name)\n+                        )\n                 elif getattr(self, field.attname) is None:\n                     # Use pk from related object if it has been saved after\n                     # an assignment.\ndiff --git a/django/db/models/fields/related_descriptors.py b/django/db/models/fields/related_descriptors.py\nindex 872a4c98dc..fd06c48ecd 100644\n--- a/django/db/models/fields/related_descriptors.py\n+++ b/django/db/models/fields/related_descriptors.py\n@@ -254,7 +254,17 @@ class ForwardManyToOneDescriptor:\n         # Set the values of the related field.\n         else:\n             for lh_field, rh_field in self.field.related_fields:\n-                setattr(instance, lh_field.attname, getattr(value, rh_field.attname))\n+                related_value = getattr(value, rh_field.attname)\n+                if related_value is None:\n+                    raise ValueError(\n+                        'Cannot assign \"%r\": \"%s.%s\" must be a \"%s\" instance with a non-null primary key.' % (\n+                            value,\n+                            instance._meta.object_name,\n+                            self.field.name,\n+                            self.field.remote_field.model._meta.object_name,\n+                        )\n+                    )\n+                setattr(instance, lh_field.attname, related_value)\n \n         # Set the related instance cache used by __get__ to avoid an SQL query\n         # when accessing the attribute we just set.\n",
            "model": "gpt-4o",
            "cost": 0.526125,
            "added_files": [
                "django/db/models/base.py",
                "django/db/models/fields/related_descriptors.py"
            ],
            "gold_files": [
                "django/db/models/base.py"
            ],
            "edited_files": [
                "django/db/models/base.py",
                "django/db/models/fields/related_descriptors.py"
            ],
            "edit_outcome": true,
            "lint_outcome": true,
            "test_outcome": false,
            "try": 1
        },
        {
            "instance_id": "django__django-13964",
            "model_name_or_path": "aider--gpt-4o--openrouter-anthropic-claude-3-opus",
            "model_patch": "diff --git a/django/db/models/fields/related_descriptors.py b/django/db/models/fields/related_descriptors.py\nindex 872a4c98dc..0645694137 100644\n--- a/django/db/models/fields/related_descriptors.py\n+++ b/django/db/models/fields/related_descriptors.py\n@@ -254,7 +254,12 @@ class ForwardManyToOneDescriptor:\n         # Set the values of the related field.\n         else:\n             for lh_field, rh_field in self.field.related_fields:\n-                setattr(instance, lh_field.attname, getattr(value, rh_field.attname))\n+                rh_val = getattr(value, rh_field.attname)\n+                if rh_val != getattr(value, rh_field.name):\n+                    # If the primary key has been modified, and differs from\n+                    # the raw field value, use the primary key's value instead.\n+                    rh_val = getattr(value, rh_field.name)\n+                setattr(instance, lh_field.attname, rh_val)\n \n         # Set the related instance cache used by __get__ to avoid an SQL query\n         # when accessing the attribute we just set.\n",
            "model": "openrouter/anthropic/claude-3-opus",
            "cost": 0.7678200000000001,
            "added_files": [
                "django/db/models/fields/related_descriptors.py"
            ],
            "gold_files": [
                "django/db/models/base.py"
            ],
            "edited_files": [
                "django/db/models/fields/related_descriptors.py"
            ],
            "edit_outcome": true,
            "lint_outcome": true,
            "test_outcome": true,
            "try": 1
        }
    ],
    "resolved": false
}