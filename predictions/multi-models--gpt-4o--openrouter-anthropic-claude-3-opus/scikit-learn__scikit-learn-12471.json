{
    "instance_id": "scikit-learn__scikit-learn-12471",
    "model_name_or_path": "aider--gpt-4o--openrouter-anthropic-claude-3-opus",
    "model_patch": "diff --git a/sklearn/preprocessing/_encoders.py b/sklearn/preprocessing/_encoders.py\nindex 1e05aba59..9886bb1aa 100644\n--- a/sklearn/preprocessing/_encoders.py\n+++ b/sklearn/preprocessing/_encoders.py\n@@ -111,6 +111,8 @@ class _BaseEncoder(BaseEstimator, TransformerMixin):\n                     # removed later.\n                     X_mask[:, i] = valid_mask\n                     Xi = Xi.copy()\n+                    if X.dtype.kind in {'U', 'S'} and len(self.categories_[i][0]) > X.dtype.itemsize:\n+                        Xi = Xi.astype(object)\n                     Xi[~valid_mask] = self.categories_[i][0]\n             _, encoded = _encode(Xi, self.categories_[i], encode=True)\n             X_int[:, i] = encoded\n",
    "model": "gpt-4o",
    "cost": 0.23007000000000002,
    "added_files": [
        "sklearn/preprocessing/_encoders.py"
    ],
    "gold_files": [
        "sklearn/preprocessing/_encoders.py"
    ],
    "edited_files": [
        "sklearn/preprocessing/_encoders.py"
    ],
    "edit_outcome": true,
    "lint_outcome": true,
    "test_outcome": true,
    "try": 1,
    "tries": 2,
    "all_results": [
        {
            "instance_id": "scikit-learn__scikit-learn-12471",
            "model_name_or_path": "aider--gpt-4o--openrouter-anthropic-claude-3-opus",
            "model_patch": "diff --git a/sklearn/preprocessing/_encoders.py b/sklearn/preprocessing/_encoders.py\nindex 1e05aba59..9886bb1aa 100644\n--- a/sklearn/preprocessing/_encoders.py\n+++ b/sklearn/preprocessing/_encoders.py\n@@ -111,6 +111,8 @@ class _BaseEncoder(BaseEstimator, TransformerMixin):\n                     # removed later.\n                     X_mask[:, i] = valid_mask\n                     Xi = Xi.copy()\n+                    if X.dtype.kind in {'U', 'S'} and len(self.categories_[i][0]) > X.dtype.itemsize:\n+                        Xi = Xi.astype(object)\n                     Xi[~valid_mask] = self.categories_[i][0]\n             _, encoded = _encode(Xi, self.categories_[i], encode=True)\n             X_int[:, i] = encoded\n",
            "model": "gpt-4o",
            "cost": 0.23007000000000002,
            "added_files": [
                "sklearn/preprocessing/_encoders.py"
            ],
            "gold_files": [
                "sklearn/preprocessing/_encoders.py"
            ],
            "edited_files": [
                "sklearn/preprocessing/_encoders.py"
            ],
            "edit_outcome": true,
            "lint_outcome": true,
            "test_outcome": true,
            "try": 1
        }
    ],
    "resolved": false
}