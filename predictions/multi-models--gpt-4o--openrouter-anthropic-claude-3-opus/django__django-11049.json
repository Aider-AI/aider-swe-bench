{
    "instance_id": "django__django-11049",
    "model_name_or_path": "aider--gpt-4o--openrouter-anthropic-claude-3-opus",
    "model_patch": "diff --git a/django/db/models/fields/__init__.py b/django/db/models/fields/__init__.py\nindex f32ce64629..f09bf7f275 100644\n--- a/django/db/models/fields/__init__.py\n+++ b/django/db/models/fields/__init__.py\n@@ -907,6 +907,7 @@ class AutoField(Field):\n \n     def __init__(self, *args, **kwargs):\n         kwargs['blank'] = True\n+        kwargs.setdefault('help_text', 'Enter a duration in the format [DD] [[HH:]MM:]ss[.uuuuuu]')\n         super().__init__(*args, **kwargs)\n \n     def check(self, **kwargs):\n@@ -1587,7 +1588,7 @@ class DurationField(Field):\n     empty_strings_allowed = False\n     default_error_messages = {\n         'invalid': _(\"'%(value)s' value has an invalid format. It must be in \"\n-                     \"[DD] [HH:[MM:]]ss[.uuuuuu] format.\")\n+                     \"[DD] [[HH:]MM:]ss[.uuuuuu] format.\")\n     }\n     description = _(\"Duration\")\n \ndiff --git a/tests/model_fields/test_durationfield.py b/tests/model_fields/test_durationfield.py\nindex b73994f86a..f1c82ab8bd 100644\n--- a/tests/model_fields/test_durationfield.py\n+++ b/tests/model_fields/test_durationfield.py\n@@ -75,7 +75,7 @@ class TestValidation(SimpleTestCase):\n         self.assertEqual(\n             cm.exception.message % cm.exception.params,\n             \"'not a datetime' value has an invalid format. \"\n-            \"It must be in [DD] [HH:[MM:]]ss[.uuuuuu] format.\"\n+            \"It must be in [DD] [[HH:]MM:]ss[.uuuuuu] format.\"\n         )\n \n \n",
    "model": "gpt-4o",
    "cost": 0.5094550000000001,
    "added_files": [
        "django/db/models/fields/__init__.py",
        "tests/model_fields/test_durationfield.py"
    ],
    "gold_files": [
        "django/db/models/fields/__init__.py"
    ],
    "edited_files": [
        "django/db/models/fields/__init__.py",
        "tests/model_fields/test_durationfield.py"
    ],
    "edit_outcome": true,
    "lint_outcome": true,
    "test_outcome": true,
    "try": 1,
    "tries": 2,
    "all_results": [
        {
            "instance_id": "django__django-11049",
            "model_name_or_path": "aider--gpt-4o--openrouter-anthropic-claude-3-opus",
            "model_patch": "diff --git a/django/db/models/fields/__init__.py b/django/db/models/fields/__init__.py\nindex f32ce64629..f09bf7f275 100644\n--- a/django/db/models/fields/__init__.py\n+++ b/django/db/models/fields/__init__.py\n@@ -907,6 +907,7 @@ class AutoField(Field):\n \n     def __init__(self, *args, **kwargs):\n         kwargs['blank'] = True\n+        kwargs.setdefault('help_text', 'Enter a duration in the format [DD] [[HH:]MM:]ss[.uuuuuu]')\n         super().__init__(*args, **kwargs)\n \n     def check(self, **kwargs):\n@@ -1587,7 +1588,7 @@ class DurationField(Field):\n     empty_strings_allowed = False\n     default_error_messages = {\n         'invalid': _(\"'%(value)s' value has an invalid format. It must be in \"\n-                     \"[DD] [HH:[MM:]]ss[.uuuuuu] format.\")\n+                     \"[DD] [[HH:]MM:]ss[.uuuuuu] format.\")\n     }\n     description = _(\"Duration\")\n \ndiff --git a/tests/model_fields/test_durationfield.py b/tests/model_fields/test_durationfield.py\nindex b73994f86a..f1c82ab8bd 100644\n--- a/tests/model_fields/test_durationfield.py\n+++ b/tests/model_fields/test_durationfield.py\n@@ -75,7 +75,7 @@ class TestValidation(SimpleTestCase):\n         self.assertEqual(\n             cm.exception.message % cm.exception.params,\n             \"'not a datetime' value has an invalid format. \"\n-            \"It must be in [DD] [HH:[MM:]]ss[.uuuuuu] format.\"\n+            \"It must be in [DD] [[HH:]MM:]ss[.uuuuuu] format.\"\n         )\n \n \n",
            "model": "gpt-4o",
            "cost": 0.5094550000000001,
            "added_files": [
                "django/db/models/fields/__init__.py",
                "tests/model_fields/test_durationfield.py"
            ],
            "gold_files": [
                "django/db/models/fields/__init__.py"
            ],
            "edited_files": [
                "django/db/models/fields/__init__.py",
                "tests/model_fields/test_durationfield.py"
            ],
            "edit_outcome": true,
            "lint_outcome": true,
            "test_outcome": true,
            "try": 1
        }
    ],
    "resolved": true
}