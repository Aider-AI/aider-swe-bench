{
    "instance_id": "scikit-learn__scikit-learn-25747",
    "model_name_or_path": "aider--gpt-4o--openrouter-anthropic-claude-3-opus",
    "model_patch": "diff --git a/sklearn/pipeline.py b/sklearn/pipeline.py\nindex 94d9465d7..aaca1df59 100644\n--- a/sklearn/pipeline.py\n+++ b/sklearn/pipeline.py\n@@ -1278,9 +1278,12 @@ class FeatureUnion(TransformerMixin, _BaseComposition):\n \n     def _hstack(self, Xs):\n         config = _get_output_config(\"transform\", self)\n-        if config[\"dense\"] == \"pandas\" and all(hasattr(X, \"iloc\") for X in Xs):\n+        if config[\"dense\"] == \"pandas\":\n             pd = check_pandas_support(\"transform\")\n-            return pd.concat(Xs, axis=1)\n+            if all(hasattr(X, \"iloc\") for X in Xs):\n+                return pd.concat(Xs, axis=1)\n+            else:\n+                return pd.DataFrame(np.hstack(Xs), index=getattr(Xs[0], \"index\", None))\n \n         if any(sparse.issparse(f) for f in Xs):\n             Xs = sparse.hstack(Xs).tocsr()\n",
    "model": "gpt-4o",
    "cost": 0.259255,
    "added_files": [
        "sklearn/pipeline.py"
    ],
    "gold_files": [
        "sklearn/utils/_set_output.py"
    ],
    "edited_files": [
        "sklearn/pipeline.py"
    ],
    "edit_outcome": true,
    "lint_outcome": true,
    "test_outcome": true,
    "try": 1,
    "tries": 2,
    "all_results": [
        {
            "instance_id": "scikit-learn__scikit-learn-25747",
            "model_name_or_path": "aider--gpt-4o--openrouter-anthropic-claude-3-opus",
            "model_patch": "diff --git a/sklearn/pipeline.py b/sklearn/pipeline.py\nindex 94d9465d7..aaca1df59 100644\n--- a/sklearn/pipeline.py\n+++ b/sklearn/pipeline.py\n@@ -1278,9 +1278,12 @@ class FeatureUnion(TransformerMixin, _BaseComposition):\n \n     def _hstack(self, Xs):\n         config = _get_output_config(\"transform\", self)\n-        if config[\"dense\"] == \"pandas\" and all(hasattr(X, \"iloc\") for X in Xs):\n+        if config[\"dense\"] == \"pandas\":\n             pd = check_pandas_support(\"transform\")\n-            return pd.concat(Xs, axis=1)\n+            if all(hasattr(X, \"iloc\") for X in Xs):\n+                return pd.concat(Xs, axis=1)\n+            else:\n+                return pd.DataFrame(np.hstack(Xs), index=getattr(Xs[0], \"index\", None))\n \n         if any(sparse.issparse(f) for f in Xs):\n             Xs = sparse.hstack(Xs).tocsr()\n",
            "model": "gpt-4o",
            "cost": 0.259255,
            "added_files": [
                "sklearn/pipeline.py"
            ],
            "gold_files": [
                "sklearn/utils/_set_output.py"
            ],
            "edited_files": [
                "sklearn/pipeline.py"
            ],
            "edit_outcome": true,
            "lint_outcome": true,
            "test_outcome": true,
            "try": 1
        }
    ],
    "resolved": false
}