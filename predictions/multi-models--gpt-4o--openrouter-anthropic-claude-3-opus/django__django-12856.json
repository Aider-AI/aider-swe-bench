{
    "instance_id": "django__django-12856",
    "model_name_or_path": "aider--gpt-4o--openrouter-anthropic-claude-3-opus",
    "model_patch": "diff --git a/django/db/models/base.py b/django/db/models/base.py\nindex 7bb3fa4706..8796feedd0 100644\n--- a/django/db/models/base.py\n+++ b/django/db/models/base.py\n@@ -1113,6 +1113,27 @@ class Model(metaclass=ModelBase):\n                     key = NON_FIELD_ERRORS\n                 errors.setdefault(key, []).append(self.unique_error_message(model_class, unique_check))\n \n+        errors.extend(self._check_local_fields_for_constraints())\n+        return errors\n+\n+    def _check_local_fields_for_constraints(self):\n+        \"\"\"Check if fields in UniqueConstraints exist.\"\"\"\n+        errors = []\n+        for constraint in self._meta.constraints:\n+            if isinstance(constraint, UniqueConstraint):\n+                for field_name in constraint.fields:\n+                    try:\n+                        self._meta.get_field(field_name)\n+                    except FieldDoesNotExist:\n+                        errors.append(\n+                            checks.Error(\n+                                \"'%s' refers to the nonexistent field '%s'.\" % (\n+                                    constraint.name, field_name,\n+                                ),\n+                                obj=self,\n+                                id='models.E012',\n+                            )\n+                        )\n         return errors\n \n     def _perform_date_checks(self, date_checks):\n",
    "model": "gpt-4o",
    "cost": 0.37768000000000007,
    "added_files": [
        "django/db/models/base.py"
    ],
    "gold_files": [
        "django/db/models/base.py"
    ],
    "edited_files": [
        "django/db/models/base.py"
    ],
    "edit_outcome": true,
    "lint_outcome": true,
    "test_outcome": true,
    "try": 1,
    "tries": 2,
    "all_results": [
        {
            "instance_id": "django__django-12856",
            "model_name_or_path": "aider--gpt-4o--openrouter-anthropic-claude-3-opus",
            "model_patch": "diff --git a/django/db/models/base.py b/django/db/models/base.py\nindex 7bb3fa4706..8796feedd0 100644\n--- a/django/db/models/base.py\n+++ b/django/db/models/base.py\n@@ -1113,6 +1113,27 @@ class Model(metaclass=ModelBase):\n                     key = NON_FIELD_ERRORS\n                 errors.setdefault(key, []).append(self.unique_error_message(model_class, unique_check))\n \n+        errors.extend(self._check_local_fields_for_constraints())\n+        return errors\n+\n+    def _check_local_fields_for_constraints(self):\n+        \"\"\"Check if fields in UniqueConstraints exist.\"\"\"\n+        errors = []\n+        for constraint in self._meta.constraints:\n+            if isinstance(constraint, UniqueConstraint):\n+                for field_name in constraint.fields:\n+                    try:\n+                        self._meta.get_field(field_name)\n+                    except FieldDoesNotExist:\n+                        errors.append(\n+                            checks.Error(\n+                                \"'%s' refers to the nonexistent field '%s'.\" % (\n+                                    constraint.name, field_name,\n+                                ),\n+                                obj=self,\n+                                id='models.E012',\n+                            )\n+                        )\n         return errors\n \n     def _perform_date_checks(self, date_checks):\n",
            "model": "gpt-4o",
            "cost": 0.37768000000000007,
            "added_files": [
                "django/db/models/base.py"
            ],
            "gold_files": [
                "django/db/models/base.py"
            ],
            "edited_files": [
                "django/db/models/base.py"
            ],
            "edit_outcome": true,
            "lint_outcome": true,
            "test_outcome": true,
            "try": 1
        }
    ],
    "resolved": false
}