{
    "instance_id": "django__django-13315",
    "model_name_or_path": "aider--gpt-4o--openrouter-anthropic-claude-3-opus",
    "model_patch": "diff --git a/django/db/models/fields/related.py b/django/db/models/fields/related.py\nindex 397146a354..036060e055 100644\n--- a/django/db/models/fields/related.py\n+++ b/django/db/models/fields/related.py\n@@ -416,7 +416,10 @@ class RelatedField(FieldCacheMixin, Field):\n                 'limit_choices_to': limit_choices_to,\n             })\n         defaults.update(kwargs)\n-        return super().formfield(**defaults)\n+        return super().formfield(**{\n+            **defaults,\n+            'queryset': defaults['queryset'].distinct(),\n+        })\n \n     def related_query_name(self):\n         \"\"\"\n",
    "cost": 1.5818500000000002,
    "added_files": [
        "django/db/models/fields/related.py"
    ],
    "gold_files": [
        "django/forms/models.py"
    ],
    "edited_files": [
        "django/db/models/fields/related.py"
    ],
    "edit_outcome": true,
    "lint_outcome": true,
    "test_outcome": true,
    "try": 1,
    "tries": 2,
    "all_results": [
        {
            "instance_id": "django__django-13315",
            "model_name_or_path": "aider--gpt-4o--openrouter-anthropic-claude-3-opus",
            "model_patch": "diff --git a/django/db/models/fields/related.py b/django/db/models/fields/related.py\nindex 397146a354..7ed1b01317 100644\n--- a/django/db/models/fields/related.py\n+++ b/django/db/models/fields/related.py\n@@ -416,7 +416,12 @@ class RelatedField(FieldCacheMixin, Field):\n                 'limit_choices_to': limit_choices_to,\n             })\n         defaults.update(kwargs)\n-        return super().formfield(**defaults)\n+        formfield = super().formfield(**defaults)\n+\n+        if hasattr(formfield, 'queryset'):\n+            formfield.queryset = formfield.queryset.distinct()\n+\n+        return formfield\n \n     def related_query_name(self):\n         \"\"\"\n@@ -528,6 +533,16 @@ class ForeignObject(RelatedField):\n             frozenset(ut)\n             for ut in self.remote_field.model._meta.unique_together\n         })\n+\n+        if hasattr(formfield, 'queryset'):\n+            formfield.queryset = formfield.queryset.distinct()\n+\n+        return formfield\n+\n+        if hasattr(formfield, 'queryset'):\n+            formfield.queryset = formfield.queryset.distinct()\n+\n+        return formfield\n         unique_foreign_fields.update({\n             frozenset(uc.fields)\n             for uc in self.remote_field.model._meta.total_unique_constraints\n@@ -986,7 +1001,7 @@ class ForeignKey(ForeignObject):\n             raise ValueError(\"Cannot create form field for %r yet, because \"\n                              \"its related model %r has not been loaded yet\" %\n                              (self.name, self.remote_field.model))\n-        return super().formfield(**{\n+        formfield = super().formfield(**{\n             'form_class': forms.ModelChoiceField,\n             'queryset': self.remote_field.model._default_manager.using(using),\n             'to_field_name': self.remote_field.field_name,\ndiff --git a/django/forms/models.py b/django/forms/models.py\nindex 5d115458a1..f993bb9c98 100644\n--- a/django/forms/models.py\n+++ b/django/forms/models.py\n@@ -100,7 +100,7 @@ def apply_limit_choices_to_to_formfield(formfield):\n     if hasattr(formfield, 'queryset') and hasattr(formfield, 'get_limit_choices_to'):\n         limit_choices_to = formfield.get_limit_choices_to()\n         if limit_choices_to is not None:\n-            formfield.queryset = formfield.queryset.complex_filter(limit_choices_to)\n+            formfield.queryset = formfield.queryset.complex_filter(limit_choices_to).distinct()\n \n \n def fields_for_model(model, fields=None, exclude=None, widgets=None,\n",
            "cost": 0.7859050000000001,
            "added_files": [
                "django/db/models/fields/related.py",
                "django/forms/models.py"
            ],
            "gold_files": [
                "django/forms/models.py"
            ],
            "edited_files": [
                "django/db/models/fields/related.py",
                "django/forms/models.py"
            ],
            "edit_outcome": true,
            "lint_outcome": false,
            "test_outcome": null,
            "try": 1
        },
        {
            "instance_id": "django__django-13315",
            "model_name_or_path": "aider--gpt-4o--openrouter-anthropic-claude-3-opus",
            "model_patch": "diff --git a/django/db/models/fields/related.py b/django/db/models/fields/related.py\nindex 397146a354..036060e055 100644\n--- a/django/db/models/fields/related.py\n+++ b/django/db/models/fields/related.py\n@@ -416,7 +416,10 @@ class RelatedField(FieldCacheMixin, Field):\n                 'limit_choices_to': limit_choices_to,\n             })\n         defaults.update(kwargs)\n-        return super().formfield(**defaults)\n+        return super().formfield(**{\n+            **defaults,\n+            'queryset': defaults['queryset'].distinct(),\n+        })\n \n     def related_query_name(self):\n         \"\"\"\n",
            "cost": 0.795945,
            "added_files": [
                "django/db/models/fields/related.py"
            ],
            "gold_files": [
                "django/forms/models.py"
            ],
            "edited_files": [
                "django/db/models/fields/related.py"
            ],
            "edit_outcome": true,
            "lint_outcome": true,
            "test_outcome": true,
            "try": 1
        }
    ],
    "resolved": true
}