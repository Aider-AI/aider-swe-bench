{
    "instance_id": "django__django-15781",
    "model_name_or_path": "aider--gpt-4o--openrouter-anthropic-claude-3-opus",
    "model_patch": "diff --git a/django/core/management/base.py b/django/core/management/base.py\nindex d37d43d5c5..15f7603ecf 100644\n--- a/django/core/management/base.py\n+++ b/django/core/management/base.py\n@@ -105,7 +105,8 @@ def no_translations(handle_func):\n class DjangoHelpFormatter(HelpFormatter):\n     \"\"\"\n     Customized formatter so that command-specific arguments appear in the\n-    --help output before arguments common to all commands.\n+    --help output before arguments common to all commands and preserve\n+    the formatting of the help attribute.\n     \"\"\"\n \n     show_last = {\n@@ -130,6 +131,12 @@ class DjangoHelpFormatter(HelpFormatter):\n     def add_arguments(self, actions):\n         super().add_arguments(self._reordered_actions(actions))\n \n+    def _fill_text(self, text, width, indent):\n+        \"\"\"\n+        Preserve the formatting of the help attribute.\n+        \"\"\"\n+        return \"\\n\".join([indent + line for line in text.splitlines()])\n+\n \n class OutputWrapper(TextIOBase):\n     \"\"\"\n",
    "model": "gpt-4o",
    "cost": 0.22293000000000002,
    "added_files": [
        "django/core/management/base.py"
    ],
    "gold_files": [
        "django/core/management/base.py"
    ],
    "edited_files": [
        "django/core/management/base.py"
    ],
    "edit_outcome": true,
    "lint_outcome": true,
    "test_outcome": true,
    "try": 1,
    "tries": 2,
    "all_results": [
        {
            "instance_id": "django__django-15781",
            "model_name_or_path": "aider--gpt-4o--openrouter-anthropic-claude-3-opus",
            "model_patch": "diff --git a/django/core/management/base.py b/django/core/management/base.py\nindex d37d43d5c5..15f7603ecf 100644\n--- a/django/core/management/base.py\n+++ b/django/core/management/base.py\n@@ -105,7 +105,8 @@ def no_translations(handle_func):\n class DjangoHelpFormatter(HelpFormatter):\n     \"\"\"\n     Customized formatter so that command-specific arguments appear in the\n-    --help output before arguments common to all commands.\n+    --help output before arguments common to all commands and preserve\n+    the formatting of the help attribute.\n     \"\"\"\n \n     show_last = {\n@@ -130,6 +131,12 @@ class DjangoHelpFormatter(HelpFormatter):\n     def add_arguments(self, actions):\n         super().add_arguments(self._reordered_actions(actions))\n \n+    def _fill_text(self, text, width, indent):\n+        \"\"\"\n+        Preserve the formatting of the help attribute.\n+        \"\"\"\n+        return \"\\n\".join([indent + line for line in text.splitlines()])\n+\n \n class OutputWrapper(TextIOBase):\n     \"\"\"\n",
            "model": "gpt-4o",
            "cost": 0.22293000000000002,
            "added_files": [
                "django/core/management/base.py"
            ],
            "gold_files": [
                "django/core/management/base.py"
            ],
            "edited_files": [
                "django/core/management/base.py"
            ],
            "edit_outcome": true,
            "lint_outcome": true,
            "test_outcome": true,
            "try": 1
        }
    ],
    "resolved": false
}