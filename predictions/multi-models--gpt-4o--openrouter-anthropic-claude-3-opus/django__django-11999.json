{
    "instance_id": "django__django-11999",
    "model_name_or_path": "aider--gpt-4o--openrouter-anthropic-claude-3-opus",
    "model_patch": "diff --git a/django/db/models/base.py b/django/db/models/base.py\nindex 0a5e5ff673..748b2f2604 100644\n--- a/django/db/models/base.py\n+++ b/django/db/models/base.py\n@@ -345,6 +345,11 @@ class ModelBase(type):\n                 remote = wrt.remote_field.model\n                 lazy_related_operation(make_foreign_order_accessors, cls, remote)\n \n+        # Add get_FIELD_display() methods for each field with choices.\n+        for field in opts.fields:\n+            if field.choices and not hasattr(cls, f'get_{field.name}_display'):\n+                setattr(cls, f'get_{field.name}_display', partialmethod(Model._get_FIELD_display, field))\n+\n         # Give the class a docstring -- its definition.\n         if cls.__doc__ is None:\n             cls.__doc__ = \"%s(%s)\" % (cls.__name__, \", \".join(f.name for f in opts.fields))\n",
    "model": "gpt-4o",
    "cost": 0.48798500000000006,
    "added_files": [
        "django/db/models/base.py"
    ],
    "gold_files": [
        "django/db/models/fields/__init__.py"
    ],
    "edited_files": [
        "django/db/models/base.py"
    ],
    "edit_outcome": true,
    "lint_outcome": true,
    "test_outcome": true,
    "try": 1,
    "tries": 2,
    "all_results": [
        {
            "instance_id": "django__django-11999",
            "model_name_or_path": "aider--gpt-4o--openrouter-anthropic-claude-3-opus",
            "model_patch": "diff --git a/django/db/models/base.py b/django/db/models/base.py\nindex 0a5e5ff673..748b2f2604 100644\n--- a/django/db/models/base.py\n+++ b/django/db/models/base.py\n@@ -345,6 +345,11 @@ class ModelBase(type):\n                 remote = wrt.remote_field.model\n                 lazy_related_operation(make_foreign_order_accessors, cls, remote)\n \n+        # Add get_FIELD_display() methods for each field with choices.\n+        for field in opts.fields:\n+            if field.choices and not hasattr(cls, f'get_{field.name}_display'):\n+                setattr(cls, f'get_{field.name}_display', partialmethod(Model._get_FIELD_display, field))\n+\n         # Give the class a docstring -- its definition.\n         if cls.__doc__ is None:\n             cls.__doc__ = \"%s(%s)\" % (cls.__name__, \", \".join(f.name for f in opts.fields))\n",
            "model": "gpt-4o",
            "cost": 0.48798500000000006,
            "added_files": [
                "django/db/models/base.py"
            ],
            "gold_files": [
                "django/db/models/fields/__init__.py"
            ],
            "edited_files": [
                "django/db/models/base.py"
            ],
            "edit_outcome": true,
            "lint_outcome": true,
            "test_outcome": true,
            "try": 1
        }
    ],
    "resolved": false
}