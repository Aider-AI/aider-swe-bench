{
    "instance_id": "pytest-dev__pytest-11143",
    "model_name_or_path": "aider--gpt-4o--openrouter-anthropic-claude-3-opus",
    "model_patch": "diff --git a/src/_pytest/assertion/rewrite.py b/src/_pytest/assertion/rewrite.py\nindex 157903faf..1369f34f6 100644\n--- a/src/_pytest/assertion/rewrite.py\n+++ b/src/_pytest/assertion/rewrite.py\n@@ -667,7 +667,7 @@ class AssertionRewriter(ast.NodeVisitor):\n         # docstrings and __future__ imports, so first figure out where that is.\n         doc = getattr(mod, \"docstring\", None)\n         expect_docstring = doc is None\n-        if doc is not None and self.is_rewrite_disabled(doc):\n+        if doc is not None and isinstance(doc, str) and self.is_rewrite_disabled(doc):\n             return\n         pos = 0\n         item = None\n@@ -743,7 +743,7 @@ class AssertionRewriter(ast.NodeVisitor):\n \n     @staticmethod\n     def is_rewrite_disabled(docstring: str) -> bool:\n-        return \"PYTEST_DONT_REWRITE\" in docstring\n+        return isinstance(docstring, str) and \"PYTEST_DONT_REWRITE\" in docstring\n \n     def variable(self) -> str:\n         \"\"\"Get a new variable.\"\"\"\n",
    "model": "gpt-4o",
    "cost": 0.25918,
    "added_files": [
        "src/_pytest/assertion/rewrite.py"
    ],
    "gold_files": [
        "src/_pytest/assertion/rewrite.py"
    ],
    "edited_files": [
        "src/_pytest/assertion/rewrite.py"
    ],
    "edit_outcome": true,
    "lint_outcome": true,
    "test_outcome": true,
    "try": 1,
    "tries": 2,
    "all_results": [
        {
            "instance_id": "pytest-dev__pytest-11143",
            "model_name_or_path": "aider--gpt-4o--openrouter-anthropic-claude-3-opus",
            "model_patch": "diff --git a/src/_pytest/assertion/rewrite.py b/src/_pytest/assertion/rewrite.py\nindex 157903faf..1369f34f6 100644\n--- a/src/_pytest/assertion/rewrite.py\n+++ b/src/_pytest/assertion/rewrite.py\n@@ -667,7 +667,7 @@ class AssertionRewriter(ast.NodeVisitor):\n         # docstrings and __future__ imports, so first figure out where that is.\n         doc = getattr(mod, \"docstring\", None)\n         expect_docstring = doc is None\n-        if doc is not None and self.is_rewrite_disabled(doc):\n+        if doc is not None and isinstance(doc, str) and self.is_rewrite_disabled(doc):\n             return\n         pos = 0\n         item = None\n@@ -743,7 +743,7 @@ class AssertionRewriter(ast.NodeVisitor):\n \n     @staticmethod\n     def is_rewrite_disabled(docstring: str) -> bool:\n-        return \"PYTEST_DONT_REWRITE\" in docstring\n+        return isinstance(docstring, str) and \"PYTEST_DONT_REWRITE\" in docstring\n \n     def variable(self) -> str:\n         \"\"\"Get a new variable.\"\"\"\n",
            "model": "gpt-4o",
            "cost": 0.25918,
            "added_files": [
                "src/_pytest/assertion/rewrite.py"
            ],
            "gold_files": [
                "src/_pytest/assertion/rewrite.py"
            ],
            "edited_files": [
                "src/_pytest/assertion/rewrite.py"
            ],
            "edit_outcome": true,
            "lint_outcome": true,
            "test_outcome": true,
            "try": 1
        }
    ],
    "resolved": true
}