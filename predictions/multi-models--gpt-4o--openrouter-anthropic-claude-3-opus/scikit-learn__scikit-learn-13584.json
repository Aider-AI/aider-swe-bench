{
    "instance_id": "scikit-learn__scikit-learn-13584",
    "model_name_or_path": "aider--gpt-4o--openrouter-anthropic-claude-3-opus",
    "model_patch": "diff --git a/sklearn/utils/_pprint.py b/sklearn/utils/_pprint.py\nindex b8686dba5..c1915eda7 100644\n--- a/sklearn/utils/_pprint.py\n+++ b/sklearn/utils/_pprint.py\n@@ -67,6 +67,7 @@ from inspect import signature\n import pprint\n from collections import OrderedDict\n \n+import numpy as np\n from ..base import BaseEstimator\n from .._config import get_config\n from . import is_scalar_nan\n@@ -95,7 +96,8 @@ def _changed_params(estimator):\n     init_params = signature(init_func).parameters\n     init_params = {name: param.default for name, param in init_params.items()}\n     for k, v in params.items():\n-        if (v != init_params[k] and\n+        if (isinstance(v, np.ndarray) and isinstance(init_params[k], np.ndarray) and not np.array_equal(v, init_params[k])) or \\\n+           (not isinstance(v, np.ndarray) and v != init_params[k] and\n                 not (is_scalar_nan(init_params[k]) and is_scalar_nan(v))):\n             filtered_params[k] = v\n     return filtered_params\n",
    "model": "gpt-4o",
    "cost": 0.21102500000000002,
    "added_files": [
        "sklearn/utils/_pprint.py"
    ],
    "gold_files": [
        "sklearn/utils/_pprint.py"
    ],
    "edited_files": [
        "sklearn/utils/_pprint.py"
    ],
    "edit_outcome": true,
    "lint_outcome": true,
    "test_outcome": true,
    "try": 1,
    "tries": 2,
    "all_results": [
        {
            "instance_id": "scikit-learn__scikit-learn-13584",
            "model_name_or_path": "aider--gpt-4o--openrouter-anthropic-claude-3-opus",
            "model_patch": "diff --git a/sklearn/utils/_pprint.py b/sklearn/utils/_pprint.py\nindex b8686dba5..c1915eda7 100644\n--- a/sklearn/utils/_pprint.py\n+++ b/sklearn/utils/_pprint.py\n@@ -67,6 +67,7 @@ from inspect import signature\n import pprint\n from collections import OrderedDict\n \n+import numpy as np\n from ..base import BaseEstimator\n from .._config import get_config\n from . import is_scalar_nan\n@@ -95,7 +96,8 @@ def _changed_params(estimator):\n     init_params = signature(init_func).parameters\n     init_params = {name: param.default for name, param in init_params.items()}\n     for k, v in params.items():\n-        if (v != init_params[k] and\n+        if (isinstance(v, np.ndarray) and isinstance(init_params[k], np.ndarray) and not np.array_equal(v, init_params[k])) or \\\n+           (not isinstance(v, np.ndarray) and v != init_params[k] and\n                 not (is_scalar_nan(init_params[k]) and is_scalar_nan(v))):\n             filtered_params[k] = v\n     return filtered_params\n",
            "model": "gpt-4o",
            "cost": 0.21102500000000002,
            "added_files": [
                "sklearn/utils/_pprint.py"
            ],
            "gold_files": [
                "sklearn/utils/_pprint.py"
            ],
            "edited_files": [
                "sklearn/utils/_pprint.py"
            ],
            "edit_outcome": true,
            "lint_outcome": true,
            "test_outcome": true,
            "try": 1
        }
    ],
    "resolved": true
}