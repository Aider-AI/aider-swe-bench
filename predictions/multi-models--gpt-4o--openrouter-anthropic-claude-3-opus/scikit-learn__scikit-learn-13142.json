{
    "instance_id": "scikit-learn__scikit-learn-13142",
    "model_name_or_path": "aider--gpt-4o--openrouter-anthropic-claude-3-opus",
    "model_patch": "diff --git a/sklearn/mixture/tests/test_gaussian_mixture.py b/sklearn/mixture/tests/test_gaussian_mixture.py\nindex 4d549ccd7..86574e2cd 100644\n--- a/sklearn/mixture/tests/test_gaussian_mixture.py\n+++ b/sklearn/mixture/tests/test_gaussian_mixture.py\n@@ -571,6 +571,14 @@ def test_gaussian_mixture_predict_predict_proba():\n \n \n @pytest.mark.filterwarnings(\"ignore:.*did not converge.*\")\n+def test_gaussian_mixture_fit_predict_n_init():\n+    rng = np.random.RandomState(0)\n+    X = rng.randn(1000, 5)\n+    \n+    gm = GaussianMixture(n_components=5, n_init=5)\n+    c1 = gm.fit_predict(X)\n+    c2 = gm.predict(X)\n+    assert_array_equal(c1, c2)\n @pytest.mark.parametrize('seed, max_iter, tol', [\n     (0, 2, 1e-7),    # strict non-convergence\n     (1, 2, 1e-1),    # loose non-convergence\n",
    "model": "gpt-4o",
    "cost": 0.25239,
    "added_files": [
        "sklearn/mixture/tests/test_gaussian_mixture.py"
    ],
    "gold_files": [
        "sklearn/mixture/base.py"
    ],
    "edited_files": [
        "sklearn/mixture/tests/test_gaussian_mixture.py"
    ],
    "edit_outcome": true,
    "lint_outcome": true,
    "test_outcome": true,
    "try": 1,
    "tries": 2,
    "all_results": [
        {
            "instance_id": "scikit-learn__scikit-learn-13142",
            "model_name_or_path": "aider--gpt-4o--openrouter-anthropic-claude-3-opus",
            "model_patch": "diff --git a/sklearn/mixture/tests/test_gaussian_mixture.py b/sklearn/mixture/tests/test_gaussian_mixture.py\nindex 4d549ccd7..86574e2cd 100644\n--- a/sklearn/mixture/tests/test_gaussian_mixture.py\n+++ b/sklearn/mixture/tests/test_gaussian_mixture.py\n@@ -571,6 +571,14 @@ def test_gaussian_mixture_predict_predict_proba():\n \n \n @pytest.mark.filterwarnings(\"ignore:.*did not converge.*\")\n+def test_gaussian_mixture_fit_predict_n_init():\n+    rng = np.random.RandomState(0)\n+    X = rng.randn(1000, 5)\n+    \n+    gm = GaussianMixture(n_components=5, n_init=5)\n+    c1 = gm.fit_predict(X)\n+    c2 = gm.predict(X)\n+    assert_array_equal(c1, c2)\n @pytest.mark.parametrize('seed, max_iter, tol', [\n     (0, 2, 1e-7),    # strict non-convergence\n     (1, 2, 1e-1),    # loose non-convergence\n",
            "model": "gpt-4o",
            "cost": 0.25239,
            "added_files": [
                "sklearn/mixture/tests/test_gaussian_mixture.py"
            ],
            "gold_files": [
                "sklearn/mixture/base.py"
            ],
            "edited_files": [
                "sklearn/mixture/tests/test_gaussian_mixture.py"
            ],
            "edit_outcome": true,
            "lint_outcome": true,
            "test_outcome": true,
            "try": 1
        }
    ],
    "resolved": false
}