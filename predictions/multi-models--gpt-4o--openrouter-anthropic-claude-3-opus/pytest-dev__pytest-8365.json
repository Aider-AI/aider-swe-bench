{
    "instance_id": "pytest-dev__pytest-8365",
    "model_name_or_path": "aider--gpt-4o--openrouter-anthropic-claude-3-opus",
    "model_patch": "diff --git a/src/_pytest/tmpdir.py b/src/_pytest/tmpdir.py\nindex 29c7e19d7..24a67cf79 100644\n--- a/src/_pytest/tmpdir.py\n+++ b/src/_pytest/tmpdir.py\n@@ -149,12 +149,15 @@ class TempdirFactory:\n \n \n def get_user() -> Optional[str]:\n-    \"\"\"Return the current user name, or None if getuser() does not work\n-    in the current environment (see #1010).\"\"\"\n+    \"\"\"Return the current user name, sanitized to be safe for directory names,\n+    or None if getuser() does not work in the current environment (see #1010).\"\"\"\n     import getpass\n+    import re\n \n     try:\n-        return getpass.getuser()\n+        user = getpass.getuser()\n+        # Replace any character that is not alphanumeric or an underscore with an underscore\n+        return re.sub(r'[^\\w]', '_', user)\n     except (ImportError, KeyError):\n         return None\n \n",
    "model": "gpt-4o",
    "cost": 0.20489500000000002,
    "added_files": [
        "src/_pytest/tmpdir.py"
    ],
    "gold_files": [
        "src/_pytest/tmpdir.py"
    ],
    "edited_files": [
        "src/_pytest/tmpdir.py"
    ],
    "edit_outcome": true,
    "lint_outcome": true,
    "test_outcome": true,
    "try": 1,
    "tries": 2,
    "all_results": [
        {
            "instance_id": "pytest-dev__pytest-8365",
            "model_name_or_path": "aider--gpt-4o--openrouter-anthropic-claude-3-opus",
            "model_patch": "diff --git a/src/_pytest/tmpdir.py b/src/_pytest/tmpdir.py\nindex 29c7e19d7..24a67cf79 100644\n--- a/src/_pytest/tmpdir.py\n+++ b/src/_pytest/tmpdir.py\n@@ -149,12 +149,15 @@ class TempdirFactory:\n \n \n def get_user() -> Optional[str]:\n-    \"\"\"Return the current user name, or None if getuser() does not work\n-    in the current environment (see #1010).\"\"\"\n+    \"\"\"Return the current user name, sanitized to be safe for directory names,\n+    or None if getuser() does not work in the current environment (see #1010).\"\"\"\n     import getpass\n+    import re\n \n     try:\n-        return getpass.getuser()\n+        user = getpass.getuser()\n+        # Replace any character that is not alphanumeric or an underscore with an underscore\n+        return re.sub(r'[^\\w]', '_', user)\n     except (ImportError, KeyError):\n         return None\n \n",
            "model": "gpt-4o",
            "cost": 0.20489500000000002,
            "added_files": [
                "src/_pytest/tmpdir.py"
            ],
            "gold_files": [
                "src/_pytest/tmpdir.py"
            ],
            "edited_files": [
                "src/_pytest/tmpdir.py"
            ],
            "edit_outcome": true,
            "lint_outcome": true,
            "test_outcome": true,
            "try": 1
        }
    ],
    "resolved": false
}